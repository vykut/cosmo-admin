[{"/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/index.js":"1","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/redux/reducers/firebaseReducers.js":"2","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/App.js":"3","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/HeaderComponents/Header.js":"4","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/LoginComponents/LoginLogic.js":"5","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/LoginComponents/SignIn.js":"6","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/LoginComponents/ResetPassword.js":"7","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/utils/utils.js":"8","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/DashboardComponents/Dashboard.js":"9","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/HeaderComponents/AdminDrawer.js":"10","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/MarketComponents/Market.js":"11","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/ProductsComponents/Products.js":"12","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/CategoriesComponents/Categories.js":"13","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/OrdersComponents/Orders.js":"14","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/AuxiliaryComponents/PageContainer.js":"15","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/AuxiliaryComponents/TitleGrid.js":"16","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/UsersComponents/Users.js":"17","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/OrdersComponents/OrdersTable/OrdersTable.js":"18","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/OrdersComponents/OrdersTable/OrdersTableRow.js":"19","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/OrdersComponents/OrdersTable/OrdersTableHead.js":"20","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/OrdersComponents/OrdersTable/DeliveredOrdersTableFooter.js":"21","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/OrdersComponents/OrderDetails/OrderDetails.js":"22","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/OrdersComponents/OrderDetails/OrderNotes.js":"23","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/OrdersComponents/OrderDetails/OrderCustomerDetails.js":"24","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/OrdersComponents/OrderDetails/OrderTotal.js":"25","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/OrdersComponents/OrderDetails/OrderHeader.js":"26","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/OrdersComponents/OrderDetails/OrderProducts.js":"27","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/OrdersComponents/OrderDetails/OrderUserDetails.js":"28","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/OrdersComponents/OrderDetails/OrderAddressDetails.js":"29","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/OrdersComponents/OrderDetails/OrderProductsTableRow.js":"30","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/OrdersComponents/OrderContext/OrderContext.js":"31","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/CategoriesComponents/CategoriesTree.js":"32","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/CategoriesComponents/CategoryContext/CategoryContext.js":"33","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/UsersComponents/UserContext/UserContext.js":"34","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/CategoriesComponents/CategoryDetails.js":"35","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/CategoriesComponents/CategoryCreator.js":"36","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/ProductsComponents/ProductsList.js":"37","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/ProductsComponents/CategoriesTree.js":"38","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/ProductsComponents/ProductDetails.js":"39","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/ProductsComponents/ProductContext/ProductContext.js":"40","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/ProductsComponents/ProductCreator.js":"41","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/ProductsComponents/ProductBox.js":"42","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/ProductsComponents/AddProductBox.js":"43","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/ProductsComponents/ProductsPageHeader.js":"44","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/ProductsComponents/ProductMarketBox.js":"45","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/UsersComponents/UsersTable.js":"46","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/UsersComponents/UsersTableHead.js":"47","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/UsersComponents/UsersTableBody.js":"48","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/UsersComponents/UserDetails.js":"49","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/UsersComponents/PersonalData.js":"50","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/UsersComponents/AddressForm.js":"51","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/UsersComponents/UserAddresses.js":"52","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/UsersComponents/OrdersTable/OrdersTable.js":"53","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/UsersComponents/OrdersTable/DeliveredOrdersTableFooter.js":"54","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/UsersComponents/OrdersTable/OrdersTableRow.js":"55","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/UsersComponents/OrdersTable/OrdersTableHead.js":"56","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/UsersComponents/ProductsList.js":"57"},{"size":2677,"mtime":1609335035004,"results":"58","hashOfConfig":"59"},{"size":262,"mtime":1609111624259,"results":"60","hashOfConfig":"59"},{"size":2423,"mtime":1609307765956,"results":"61","hashOfConfig":"59"},{"size":2670,"mtime":1609296581842,"results":"62","hashOfConfig":"59"},{"size":3765,"mtime":1609111934363,"results":"63","hashOfConfig":"59"},{"size":5138,"mtime":1609346030967,"results":"64","hashOfConfig":"59"},{"size":3321,"mtime":1609111802096,"results":"65","hashOfConfig":"59"},{"size":5248,"mtime":1609684988654,"results":"66","hashOfConfig":"59"},{"size":137,"mtime":1609115517813,"results":"67","hashOfConfig":"59"},{"size":1441,"mtime":1609288443449,"results":"68","hashOfConfig":"59"},{"size":132,"mtime":1609118000534,"results":"69","hashOfConfig":"59"},{"size":638,"mtime":1609310857483,"results":"70","hashOfConfig":"59"},{"size":625,"mtime":1609292162797,"results":"71","hashOfConfig":"59"},{"size":930,"mtime":1609197592310,"results":"72","hashOfConfig":"59"},{"size":1132,"mtime":1609118745264,"results":"73","hashOfConfig":"59"},{"size":1287,"mtime":1609291801023,"results":"74","hashOfConfig":"59"},{"size":248,"mtime":1609644769463,"results":"75","hashOfConfig":"59"},{"size":1233,"mtime":1609694978703,"results":"76","hashOfConfig":"59"},{"size":1464,"mtime":1609135963341,"results":"77","hashOfConfig":"59"},{"size":1086,"mtime":1609126440231,"results":"78","hashOfConfig":"59"},{"size":626,"mtime":1609201515301,"results":"79","hashOfConfig":"59"},{"size":6171,"mtime":1609208135582,"results":"80","hashOfConfig":"59"},{"size":1752,"mtime":1609211502542,"results":"81","hashOfConfig":"59"},{"size":805,"mtime":1609208126687,"results":"82","hashOfConfig":"59"},{"size":2077,"mtime":1609205176792,"results":"83","hashOfConfig":"59"},{"size":1731,"mtime":1609210836704,"results":"84","hashOfConfig":"59"},{"size":4297,"mtime":1609700828133,"results":"85","hashOfConfig":"59"},{"size":2784,"mtime":1609209278416,"results":"86","hashOfConfig":"59"},{"size":4286,"mtime":1609215238557,"results":"87","hashOfConfig":"59"},{"size":4983,"mtime":1609700691614,"results":"88","hashOfConfig":"59"},{"size":3561,"mtime":1609218542839,"results":"89","hashOfConfig":"59"},{"size":4199,"mtime":1609306950148,"results":"90","hashOfConfig":"59"},{"size":2034,"mtime":1609284933426,"results":"91","hashOfConfig":"59"},{"size":3583,"mtime":1609697356655,"results":"92","hashOfConfig":"59"},{"size":5217,"mtime":1609301175445,"results":"93","hashOfConfig":"59"},{"size":2709,"mtime":1609302410937,"results":"94","hashOfConfig":"59"},{"size":1245,"mtime":1609344515698,"results":"95","hashOfConfig":"59"},{"size":4151,"mtime":1609322681313,"results":"96","hashOfConfig":"59"},{"size":10474,"mtime":1609700828190,"results":"97","hashOfConfig":"59"},{"size":3666,"mtime":1609700828144,"results":"98","hashOfConfig":"59"},{"size":146,"mtime":1609307816729,"results":"99","hashOfConfig":"59"},{"size":3397,"mtime":1609699657699,"results":"100","hashOfConfig":"59"},{"size":1589,"mtime":1609341236452,"results":"101","hashOfConfig":"59"},{"size":3944,"mtime":1609317176311,"results":"102","hashOfConfig":"59"},{"size":5090,"mtime":1609338934761,"results":"103","hashOfConfig":"59"},{"size":675,"mtime":1609645223959,"results":"104","hashOfConfig":"59"},{"size":1656,"mtime":1609646991447,"results":"105","hashOfConfig":"59"},{"size":1391,"mtime":1609684744288,"results":"106","hashOfConfig":"59"},{"size":2992,"mtime":1609698684907,"results":"107","hashOfConfig":"59"},{"size":4881,"mtime":1609697889662,"results":"108","hashOfConfig":"59"},{"size":2778,"mtime":1609700828208,"results":"109","hashOfConfig":"59"},{"size":3155,"mtime":1609694832465,"results":"110","hashOfConfig":"59"},{"size":1485,"mtime":1609698178019,"results":"111","hashOfConfig":"59"},{"size":724,"mtime":1609695851677,"results":"112","hashOfConfig":"59"},{"size":1294,"mtime":1609695802574,"results":"113","hashOfConfig":"59"},{"size":1033,"mtime":1609695440330,"results":"114","hashOfConfig":"59"},{"size":827,"mtime":1609700828108,"results":"115","hashOfConfig":"59"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"119"},"12x9up6",{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"119"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"119"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"119"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"119"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"119"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"119"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"119"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"119"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"119"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"119"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"119"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"189","messages":"190","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"119"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"119"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"119"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"119"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"119"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"119"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"119"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"220","messages":"221","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"119"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"119"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"119"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"231","messages":"232","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"235","messages":"236","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"237","messages":"238","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"243","messages":"244","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"119"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"119"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/index.js",["255"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport firebase from 'firebase/app';\nimport 'firebase/auth'\nimport 'firebase/firestore'\nimport 'firebase/functions'\nimport 'firebase/storage'\nimport { createStore } from 'redux'\nimport { rootReducer } from './redux/reducers/firebaseReducers'\nimport { Provider } from 'react-redux';\nimport { ReactReduxFirebaseProvider } from \"react-redux-firebase\";\nimport { createFirestoreInstance } from 'redux-firestore'\nimport { createMuiTheme, responsiveFontSizes, ThemeProvider } from '@material-ui/core';\nimport { SnackbarProvider } from 'notistack';\n\nconst app = firebase.initializeApp({\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.NODE_ENVREACT_APP_FIREBASE_APP_ID,\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID\n})\n\nexport const firestoreDB = app.firestore()\nexport const firebaseFunctions = app.functions('europe-west1')\n\nfirebase.firestore()\n\nconst rrfConfig = {\n  userProfile: \"users\",\n  useFirestoreForProfile: true,\n  enableClaims: true,\n};\n\nconst initialState = {};\nconst store = createStore(rootReducer, initialState);\n\nconst rrfProps = {\n  firebase,\n  config: rrfConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance,\n};\n\nexport var cosmoTheme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#23adae',\n      contrastText: '#fff'\n    },\n    secondary: {\n      main: '#f4c132'\n    },\n    error: {\n      main: '#de512b',\n      contrastText: '#fff'\n    },\n    info: {\n      main: '#894475',\n      contrastText: '#fff'\n    },\n    succes: {\n      main: '#55df99'\n    },\n  },\n})\n\nconst styles = {\n  success: {\n    backgroundColor: '#23adae',\n  },\n  error: {\n    backgroundColor: '#de512b',\n  },\n  info: {\n    backgroundColor: '#894475',\n  },\n  warning: {\n    backgroundColor: '#f4c132',\n  },\n}\n\ncosmoTheme = responsiveFontSizes(cosmoTheme)\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={cosmoTheme}>\n      <Provider store={store} >\n        <ReactReduxFirebaseProvider {...rrfProps} >\n          <SnackbarProvider maxSnack={5} >\n            <CssBaseline />\n            <App />\n          </SnackbarProvider>\n        </ReactReduxFirebaseProvider>\n      </Provider>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n",["256","257"],"/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/redux/reducers/firebaseReducers.js",[],"/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/App.js",["258","259","260","261","262"],"import { useSelector } from \"react-redux\";\nimport { isEmpty, isLoaded } from \"react-redux-firebase\";\nimport { Redirect, Route, Switch, withRouter } from \"react-router-dom\";\nimport LoginLogic from \"./LoginComponents/LoginLogic\";\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport Header from \"./HeaderComponents/Header\";\nimport { pages } from \"../utils/utils\";\nimport PageContainer from \"./AuxiliaryComponents/PageContainer\";\nimport OrderDetails, { OrderDetailsWithRouter } from \"./OrdersComponents/OrderDetails/OrderDetails\";\nimport { OrderProvider } from \"./OrdersComponents/OrderContext/OrderContext\";\n\nfunction AuthIsLoaded({ children }) {\n  const auth = useSelector(state => state.firebase.auth)\n  if (!isLoaded(auth)) {\n    return <></>;\n  }\n  return children\n}\n\n// A wrapper for <Route> that redirects to the login\n// screen if you're not yet authenticated or if auth is not\n// yet loaded\nfunction PrivateRoute({ children, ...rest }) {\n  const auth = useSelector(state => state.firebase.auth)\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        !isEmpty(auth) ? (\n          children\n        ) : (\n            <Redirect\n              to={{\n                pathname: \"/login\",\n                state: { from: location }\n              }}\n            />\n          )\n      }\n    />\n  );\n}\n\nfunction App() {\n  return (\n    <>\n\n      <AuthIsLoaded>\n        <Router>\n          <Header />\n          <Switch>\n            {/* <PrivateRoute path='/acasa'> */}\n            {/* <Home /> */}\n            {/* <Redirect to='/comenzi' /> */}\n            {/* </PrivateRoute> */}\n            <Route path='/login'>\n              <LoginLogic />\n            </Route>\n            {pages.map((page, index) => {\n              return <PrivateRoute exact key={index} path={page.subRoutes.map(p => p.path)}>\n                <page.provider>\n                  {page.subRoutes.map((subRoute, index) => {\n                    return <Route exact key={index} {...subRoute}>\n                      <page.layout title={subRoute.name} {...subRoute}>\n                        <subRoute.component {...subRoute} />\n                      </page.layout>\n                    </Route>\n                  })}\n                </page.provider>\n              </PrivateRoute>\n            })}\n            <Redirect to='/dashboard' />\n          </Switch>\n        </Router>\n      </AuthIsLoaded>\n    </>\n  );\n}\n\nexport default App;\n","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/HeaderComponents/Header.js",["263","264","265","266","267"],"import logo from '../../assets/logo-app-bar-cosmo-market.svg';\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { Button, capitalize, Grid, IconButton, Link, Typography } from '@material-ui/core';\nimport { useSelector } from 'react-redux';\nimport { isEmpty, useFirebase } from 'react-redux-firebase';\nimport { useHistory } from 'react-router-dom';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport AdminDrawer from './AdminDrawer';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    logo: {\n        height: 45,\n        // margin: theme.spacing()\n        // flexGrow: 1,\n    },\n    // toolbar: {\n    //     display: 'flex',\n    //     alignContent: 'center',\n    //     flexWrap: 'wrap',\n    //     justifyContent: 'space-between',\n    //     alignItems: 'center',\n    //     [theme.breakpoints.down(400)]: {\n    //         justifyContent: 'center',\n    //     },\n    //     padding: theme.spacing(),\n    // },\n    button: {\n        padding: theme.spacing(1, 3),\n        textTransform: 'none',\n    },\n    label: {\n        marginRight: theme.spacing(2),\n        [theme.breakpoints.down('sm')]: {\n            display: 'none',\n        },\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n    },\n}));\n\nexport default function Header() {\n    const classes = useStyles();\n    const profile = useSelector(state => state.firebase.profile)\n    const auth = useSelector(state => state.firebase.auth)\n    const history = useHistory()\n    const firebase = useFirebase()\n\n    const [isOpen, setIsOpen] = useState(false)\n\n    const logout = () => {\n        firebase.logout()\n    }\n\n    const toggleDrawer = () => {\n        setIsOpen(!isOpen)\n    }\n\n    return (\n        <>\n            <AppBar position=\"sticky\" className={classes.appBar}>\n                <Toolbar className={classes.toolbar}>\n                    {!isEmpty(auth) && <IconButton edge=\"start\" className={classes.menuButton} color=\"secondary\" aria-label=\"menu\" onClick={toggleDrawer}>\n                        <MenuIcon />\n                    </IconButton>}\n                    <div style={{ flexGrow: 1 }} />\n                    <Link href='/dashboard' >\n                        <img src={logo} alt='logo' className={classes.logo} />\n                    </Link>\n                    <div style={{ flexGrow: 1 }} />\n                    {!isEmpty(auth) && <Button color='secondary' onClick={logout}>Deconectare</Button>}\n                </Toolbar>\n            </AppBar>\n            <AdminDrawer isOpen={isOpen} setIsOpen={setIsOpen} />\n        </>\n    );\n}\n\n\n","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/LoginComponents/LoginLogic.js",["268","269","270","271"],"import { Box, Container, Grid, Link, makeStyles, Typography } from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport React, { useState, useReducer } from 'react';\nimport ResetPassword from './ResetPassword';\nimport SignIn from './SignIn';\n// import SignUp from './SignUp';\nimport logo from '../../assets/logo-cosmo-market.svg'\nimport { actionTypes, websiteAddress } from '../../utils/utils';\n\n\nexport const useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(2),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    width: '100%',\n  },\n  loginLogo: {\n    margin: theme.spacing(3, 0),\n    width: '80%',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n  },\n  alert: {\n    margin: theme.spacing(0, 1, 2),\n  },\n}));\n\nconst titles = {\n  login: 'Conectează-te',\n  resetPassword: 'Recuperare parolă',\n  signUp: 'Creează cont',\n}\n\nfunction loginReducer(state, action) {\n  switch (action.type) {\n    case actionTypes.login:\n      return { login: true, resetPassword: false, signUp: false, title: titles.login }\n    case actionTypes.resetPassword:\n      return { login: false, resetPassword: true, signUp: false, title: titles.resetPassword }\n    case actionTypes.signUp:\n      return { login: false, resetPassword: false, signUp: true, title: titles.signUp }\n    default:\n      console.log(`Unhandled type: ${action.type}`)\n  }\n}\n\nfunction useLogin({ reducer = loginReducer } = {}) {\n  const [{ login, resetPassword, signUp, title }, dispatch] = useReducer(reducer, { login: true, resetPassword: false, signUp: false, title: titles.login })\n\n  const loginAction = () => dispatch({ type: actionTypes.login })\n  const resetPasswordAction = () => dispatch({ type: actionTypes.resetPassword })\n  const signUpAction = () => dispatch({ type: actionTypes.signUp })\n  const dispatchAction = (actionType) => dispatch({ type: actionType })\n\n  return { login, resetPassword, signUp, title, loginAction, resetPasswordAction, signUpAction, dispatchAction }\n}\n\n\nexport default function LoginLogic() {\n  const classes = useStyles();\n  const { login, resetPassword, signUp, title, loginAction, resetPasswordAction, signUpAction, dispatchAction } = useLogin()\n\n  const [alert, setAlert] = useState({\n    message: '',\n    severity: 'error'\n  })\n\n  function Copyright() {\n    return (\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n        {'Copyright © '}\n        <Link color=\"inherit\" href={websiteAddress}>\n          {websiteAddress}\n        </Link>\n        {' '}\n        {new Date().getFullYear()}\n        {'.'}\n      </Typography>\n    );\n  }\n\n  return (\n    <Container maxWidth=\"sm\">\n      <Grid container direction='column' justify='center' spacing={2}>\n        <Grid item className={classes.loginLogo}>\n          <img src={logo} alt='logo' />\n        </Grid>\n        <Grid item>\n          <Typography variant='h4' align='center' component='div'>\n            <Box fontWeight='fontWeightBold'>\n              {title}\n            </Box>\n          </Typography>\n        </Grid>\n        {\n          alert.message && <Grid item>\n            <Alert variant=\"filled\" severity={alert.severity} className={classes.alert}>\n              {alert.message}\n            </Alert>\n          </Grid>\n        }\n        {login && <Grid item><SignIn setAlert={setAlert} dispatchAction={dispatchAction} isCreateAccountDisabled={true} /></Grid>}\n        {resetPassword && <Grid item><ResetPassword setAlert={setAlert} dispatchAction={dispatchAction} /></Grid>}\n        {/* {signUp && <Grid item><SignUp setAlert={setAlert} dispatchAction={dispatchAction} /></Grid>} */}\n        <Grid item>\n          <Box mt={8}>\n            <Copyright />\n          </Box>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/LoginComponents/SignIn.js",["272"],"import { Button, Container, Grid, Link, makeStyles, TextField } from '@material-ui/core';\nimport React, { useState } from 'react'\nimport { useFirebase } from \"react-redux-firebase\";\nimport { actionTypes, timeout } from '../../utils/utils';\nimport GoogleButton from 'react-google-button'\nimport { useHistory } from \"react-router-dom\";\nimport { firebaseFunctions } from '../..';\n\n\nexport const useStyles = makeStyles((theme) => ({\n    form: {\n        width: '100%',\n        marginTop: theme.spacing(1),\n        // marginBottom: theme.spacing(),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 3),\n    },\n}));\n\n\nexport default function SignIn({ setAlert, dispatchAction, isCreateAccountDisabled = false }) {\n    const classes = useStyles();\n    const firebase = useFirebase();\n    const history = useHistory()\n\n    const [form, setForm] = useState({})\n    const [loading, setLoading] = useState(false)\n\n    const onChangeForField = fieldName => ({ target }) => setForm(state => ({ ...state, [fieldName]: target.value }));\n\n    async function handleSubmit(e) {\n        e.preventDefault()\n\n        try {\n            setLoading(true)\n            await firebase.login({\n                email: form.email.trim(),\n                password: form.password.trim()\n            })\n            let token = await firebase.auth().currentUser.getIdTokenResult()\n            if (token.claims && token.claims.admin) {\n                setAlert({ severity: 'success', message: 'Te-ai conectat cu succes.' })\n                timeout(500)\n                    .then(() => {\n                        history.push('/acasa')\n                    })\n            } else {\n                setAlert({ severity: 'error', message: 'Nu aveți drepturile necesare pentru a accesa această pagină' })\n                firebase.logout()\n            }\n        } catch (error) {\n            setAlert({ severity: 'error', message: error.message })\n        }\n        setLoading(false)\n    }\n\n    async function handleGoogleSignIn() {\n        firebase.login({\n            provider: 'google',\n            type: 'popup',\n        })\n            .then(resp => {\n                console.log(resp)\n                setAlert({ severity: 'success', message: 'Te-ai conectat cu succes.' })\n            })\n    }\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <form className={classes.form} onSubmit={handleSubmit}>\n                <Grid container direction='column' justify='space-between' alignItems='center'>\n                    <Grid item style={{ width: '100%' }}>\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"email\"\n                            label=\"Email\"\n                            name=\"email\"\n                            autoComplete=\"email\"\n                            autoFocus\n                            onChange={onChangeForField('email')}\n                        />\n                    </Grid>\n                    <Grid item style={{ width: '100%' }}>\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            name=\"password\"\n                            label=\"Parolă\"\n                            type=\"password\"\n                            id=\"password\"\n                            autoComplete=\"current-password\"\n                            onChange={onChangeForField('password')}\n                        />\n                    </Grid>\n                    <Grid item style={{ width: '100%' }}>\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.submit}\n                            disabled={loading}\n                        >\n                            Intră în cont\n                        </Button>\n                    </Grid>\n                    <Grid item>\n                        <GoogleButton\n                            onClick={handleGoogleSignIn}\n                            style={{ marginBottom: 16 }}\n                        />\n                    </Grid>\n                </Grid>\n            </form>\n            <Grid container justify='flex-end'>\n                <Grid item>\n                    <Link variant=\"body2\" color='error' href='#' onClick={() => { dispatchAction(actionTypes.resetPassword); setAlert({}) }}>\n                        Ai uitat parola?\n                        </Link>\n                </Grid>\n                {!isCreateAccountDisabled && <Grid item>\n                    <Link variant=\"body2\" color='primary' onClick={() => { dispatchAction(actionTypes.signUp); setAlert({}) }}>\n                        Nu ai cont? Fă-ți unul acum\n                        </Link>\n                </Grid>}\n            </Grid>\n\n        </Container>\n    )\n}\n","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/LoginComponents/ResetPassword.js",[],"/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/utils/utils.js",["273","274","275","276"],"/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/DashboardComponents/Dashboard.js",[],"/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/HeaderComponents/AdminDrawer.js",["277","278","279"],"import { Box, Drawer, List, ListItem, ListItemText, makeStyles, Toolbar } from '@material-ui/core'\nimport React, { useState } from 'react'\nimport { Link, useHistory } from 'react-router-dom'\nimport { pages } from '../../utils/utils'\n\nconst useStyles = makeStyles((theme) => ({\n    drawerPaper: {\n        width: 180,\n        backgroundColor: '#f7ffff'\n    },\n}))\n\nexport default function AdminDrawer({ isOpen, setIsOpen }) {\n    const classes = useStyles()\n    const history = useHistory()\n\n    const handleClick = (path) => () => {\n        history.push(path)\n        setIsOpen(false)\n    }\n\n    return (\n        <>\n            <Drawer\n                variant='persistent'\n                anchor=\"left\"\n                open={isOpen}\n                classes={{\n                    paper: classes.drawerPaper,\n                }}\n            >\n                <Toolbar />\n                <List>\n                    {pages.map((item, index) => {\n                        return <ListItem button onClick={handleClick(item.mainPath)} key={item.title}>\n                            <ListItemText color='primary'>\n                                {/* <Box fontWeight='fontWeightMedium'> */}\n                                {item.title}\n                                {/* </Box> */}\n                            </ListItemText>\n                        </ListItem>\n                    })}\n                </List>\n            </Drawer>\n        </>\n    )\n}\n","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/MarketComponents/Market.js",[],"/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/ProductsComponents/Products.js",[],"/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/CategoriesComponents/Categories.js",["280"],"import { Grid } from '@material-ui/core'\nimport React from 'react'\nimport CategoryDetails from './CategoryDetails'\nimport CategoriesTree from './CategoriesTree'\nimport PageContainer from '../AuxiliaryComponents/PageContainer'\n\n\nexport default function Categories({ children, ...props }) {\n    return (\n        <PageContainer {...props}>\n            <Grid container spacing={4}>\n                <Grid item md={4} sm>\n                    <CategoriesTree />\n                </Grid>\n                <Grid item md={8} sm>\n                    {children}\n                </Grid>\n            </Grid>\n        </PageContainer>\n    )\n}\n","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/OrdersComponents/Orders.js",["281"],"import { Tab, Tabs } from '@material-ui/core'\nimport React, { useState } from 'react'\nimport { orderStateTypes } from '../../utils/utils'\nimport { OrderProvider, useOrderContext } from './OrderContext/OrderContext'\nimport OrdersTable from './OrdersTable/OrdersTable'\n\n\nexport default function OrdersWithStore() {\n    return (\n        <OrderProvider>\n            <Orders />\n        </OrderProvider>\n    )\n}\n\nfunction Orders() {\n    const orderContext = useOrderContext()\n\n    const changeTab = (e, newValue) => {\n        orderContext.changeOrderTab(newValue)\n    }\n\n    return (\n        <>\n            <Tabs value={orderContext.orderTab} onChange={changeTab} variant='fullWidth' indicatorColor='primary'>\n                {orderStateTypes.map((type) => {\n                    return <Tab value={type.state} label={type.name} key={type.state} />\n                })}\n            </Tabs>\n            <OrdersTable />\n        </>\n    )\n}\n","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/AuxiliaryComponents/PageContainer.js",[],"/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/AuxiliaryComponents/TitleGrid.js",[],"/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/UsersComponents/Users.js",[],"/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/OrdersComponents/OrdersTable/OrdersTable.js",[],"/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/OrdersComponents/OrdersTable/OrdersTableRow.js",["282","283","284"],"import { IconButton, TableCell, TableRow } from '@material-ui/core'\nimport React from 'react'\nimport { Link, Route, useHistory } from \"react-router-dom\";\n\nexport default function OrdersTableRow({ id, order }) {\n    const history = useHistory()\n\n    const orderClicked = () => {\n        history.push(`/comenzi/${id}/detalii`)\n    }\n\n    return (\n        <>\n            <TableRow\n                key={id}\n                hover\n                onClick={orderClicked}\n            >\n                <TableCell>\n                    {new Date(order.createdAt.seconds * 1000).toLocaleString('ro-RO')}\n                </TableCell>\n                <TableCell>\n                    {id}\n                </TableCell>\n                <TableCell>\n                    {order.user ? `${order.user.firstName}  ${order.user.lastName}` : order.userID}\n                </TableCell>\n                <TableCell>\n                    {order.address ? order.address.street : order.addressID}\n                </TableCell>\n                {order.state !== 'pending' && <TableCell>\n                    {order.rider ? `${order.rider.firstName}  ${order.rider.lastName}` : order.riderID}\n                </TableCell>}\n                <TableCell align='right'>\n                    {order.quantity}\n                </TableCell>\n                <TableCell align='right'>\n                    RON {order.totalPrice.toFixed(2)}\n                </TableCell>\n            </TableRow>\n        </>\n    )\n}\n","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/OrdersComponents/OrdersTable/OrdersTableHead.js",[],"/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/OrdersComponents/OrdersTable/DeliveredOrdersTableFooter.js",[],"/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/OrdersComponents/OrderDetails/OrderDetails.js",["285","286","287","288","289","290","291","292","293","294","295","296","297","298","299","300","301","302"],"import { Box, Button, ButtonGroup, Grid, LinearProgress, makeStyles, MenuItem, Select, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Typography } from '@material-ui/core'\nimport React, { useEffect, useState } from 'react'\nimport { useParams, withRouter } from 'react-router-dom'\nimport { useSnackbar } from 'notistack'\nimport OrderHeader from './OrderHeader'\nimport OrderNotes from './OrderNotes'\nimport OrderProducts from './OrderProducts'\nimport OrderCustomerDetails from './OrderCustomerDetails'\nimport OrderTotal from './OrderTotal'\nimport { firestoreConnect, isEmpty, populate } from 'react-redux-firebase'\nimport { connect } from 'react-redux'\nimport { compose } from 'redux'\nimport { firebaseFunctions } from '../../..'\nimport { useOrderContext } from '../OrderContext/OrderContext'\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        padding: theme.spacing(2)\n    },\n    errorButton: {\n        color: theme.palette.error.contrastText,\n        backgroundColor: theme.palette.error.main,\n        \"&:hover\": {\n            backgroundColor: theme.palette.error.dark,\n            \"@media (hover: none)\": {\n                backgroundColor: theme.palette.error.main\n            }\n        }\n    },\n}))\n\n// const populates = [\n//     { child: 'userID', root: 'users', childAlias: 'user' },\n//     { child: 'addressID', root: 'addresses', childAlias: 'address' },\n//     { child: 'riderID', root: 'users', childAlias: 'rider' },\n// ]\n\n// const order = 'order'\n\n// export const OrderDetailsWithRouter = withRouter(compose(\n//     firestoreConnect((props) => {\n//         return [\n//             {\n//                 collection: 'orders',\n//                 doc: props.match.params.orderID,\n//                 storeAs: 'order',\n//             },\n//             { collection: 'users' },\n//             { collection: 'addresses' }\n//         ]\n//     }),\n//     connect(({ firestore }, props) => ({\n//         order: populate(firestore, order, populates),\n//     }))\n// )(OrderDetails))\n\n\nexport default function OrderDetails(props) {\n    const classes = useStyles()\n    const { orderID } = useParams()\n    const orderContext = useOrderContext()\n\n    function OrderActions({ orderID, state }) {\n        const classes = useStyles()\n        const { enqueueSnackbar } = useSnackbar()\n        const functions = firebaseFunctions\n        const [isLoading, setIsLoading] = useState(false)\n        const acceptOrder = async () => {\n            setIsLoading(true)\n            functions.httpsCallable('riderFunctions-assignOrder')({ orderID: orderID })\n                .then(({ data }) => {\n                    setIsLoading(false)\n                    if (data.result) {\n                        enqueueSnackbar(data.result, { variant: 'success' })\n                    } else if (data.error) {\n                        enqueueSnackbar(data.error, { variant: 'error' })\n                    }\n                })\n        }\n\n        const completeOrder = async () => {\n            setIsLoading(true)\n            functions.httpsCallable('riderFunctions-completeOrder')({ orderID: orderID })\n                .then(({ data }) => {\n                    setIsLoading(false)\n                    if (data.result) {\n                        enqueueSnackbar(data.result, { variant: 'success' })\n                    } else if (data.error) {\n                        enqueueSnackbar(data.error, { variant: 'error' })\n                    }\n                })\n        }\n\n        const cancelDelivery = async () => {\n            setIsLoading(true)\n            functions.httpsCallable('riderFunctions-cancelDelivery')({ orderID: orderID })\n                .then(({ data }) => {\n                    setIsLoading(false)\n                    if (data.result) {\n                        enqueueSnackbar(data.result, { variant: 'success' })\n                    } else if (data.error) {\n                        enqueueSnackbar(data.error, { variant: 'error' })\n                    }\n                })\n        }\n\n        return (\n            <Grid container item justify='flex-end' className={classes.paper}>\n                {state === 'pending' && <Grid item>\n                    <Button onClick={acceptOrder} color='primary' variant='contained' disabled={isLoading}>\n                        Acceptă comanda\n                    </Button>\n                </Grid>}\n                {state === 'assigned' &&\n                    <Grid item>\n                        <ButtonGroup>\n                            <Button onClick={cancelDelivery} className={classes.errorButton} variant='contained' disabled={isLoading}>\n                                Anulează livrarea\n                            </Button>\n                            <Button onClick={completeOrder} color='primary' variant='contained' disabled={isLoading}>\n                                Finalizează comanda\n                            </Button>\n                        </ButtonGroup>\n                    </Grid>}\n                {/* {state === 'delivered' && <Grid item>\n                    <Button onClick={acceptOrder} color='primary' variant='contained'>\n                        Acceptă comanda\n                    </Button>\n                </Grid>} */}\n            </Grid>\n        )\n    }\n\n    return (\n        <>\n            <Grid container direction='column' spacing={4}>\n                {!isEmpty(orderContext.order) && <OrderHeader orderID={orderID} timestamp={orderContext.order.createdAt} state={orderContext.order.state} />}\n                {!isEmpty(orderContext.order) && <OrderCustomerDetails user={orderContext.order.user} userID={orderContext.order.userID} address={orderContext.order.address} addressID={orderContext.order.addressID} />}\n                {<OrderProducts orderID={orderID} />}\n                {!isEmpty(orderContext.order) && <OrderNotes notes={orderContext.order.notes} />}\n                {!isEmpty(orderContext.order) && <OrderTotal totalPrice={orderContext.order.totalPrice} />}\n                {/* <OrderActions orderID={orderID} state={order.state} /> */}\n                {isEmpty(orderContext.order) && <Grid item><LinearProgress /></Grid>}\n            </Grid>\n        </>\n    )\n}\n\n\n","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/OrdersComponents/OrderDetails/OrderNotes.js",["303"],"import { Box, Button, Grid, TextField, Typography } from \"@material-ui/core\";\nimport { useState } from \"react\";\nimport { isLoaded, useFirestore } from \"react-redux-firebase\";\nimport { useParams } from \"react-router-dom\";\n\nexport default function OrderNotes({ notes }) {\n    const [notesData, setNotesData] = useState(notes)\n    const [isLoading, setIsLoading] = useState(false)\n    const { orderID } = useParams()\n    const firestore = useFirestore()\n\n    const updateUserData = async (e) => {\n        setIsLoading(true)\n        await firestore.collection('orders').doc(orderID).update({ notes: notesData })\n        setIsLoading(false)\n    }\n    return (\n        <>\n            <Grid container item direction='column' spacing={2}>\n                <Grid item >\n                    <Typography component='div'>\n                        <Box fontWeight='fontWeightBold'>\n                            Note\n                        </Box>\n                    </Typography>\n                </Grid>\n                <Grid item >\n                    <TextField\n                        multiline\n                        rows={4}\n                        value={notesData}\n                        onChange={(e) => setNotesData(e.target.value)}\n                        disabled={isLoading}\n                        variant='outlined'\n                    />\n                </Grid>\n                <Grid item >\n                    <Button\n                        variant='contained'\n                        color='primary'\n                        onClick={updateUserData}\n                        disabled={isLoading}\n                    >\n                        Actualizează\n                    </Button>\n                </Grid>\n            </Grid>\n        </>\n    )\n}","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/OrdersComponents/OrderDetails/OrderCustomerDetails.js",[],"/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/OrdersComponents/OrderDetails/OrderTotal.js",[],"/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/OrdersComponents/OrderDetails/OrderHeader.js",[],"/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/OrdersComponents/OrderDetails/OrderProducts.js",["304","305","306","307","308","309","310","311"],"\nimport { Box, Button, CircularProgress, Grid, InputAdornment, LinearProgress, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TextField, Typography } from '@material-ui/core'\nimport React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { firestoreConnect, isEmpty, isLoaded, populate, useFirebase, useFirestore } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport { useOrderContext } from '../OrderContext/OrderContext'\nimport OrderProductsTableRow from './OrderProductsTableRow'\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { useParams } from 'react-router-dom'\n\n\n// const productsInOrder = 'productsInOrder'\n\n// export default compose(\n//     firestoreConnect((props) => [\n//         { collection: 'orders' },\n//         {\n//             collection: 'orders',\n//             doc: props.orderID,\n//             subcollections: [{ collection: 'products' }],\n//             storeAs: productsInOrder\n//         },\n//     ]),\n//     connect(({ firestore }, props) => ({\n//         productsInOrder: firestore.data.productsInOrder,\n//     }))\n// )(OrderProducts)\n\n\nexport default function OrderProducts() {\n    const orderContext = useOrderContext()\n    const firestore = useFirestore()\n    const firebase = useFirebase()\n    const { orderID } = useParams()\n\n    const addProductToOrder = (e, newVal) => {\n        if (newVal)\n            firestore.collection('orders').doc(orderID).collection('products').doc(newVal[0]).set({\n                quantity: firebase.firestore.FieldValue.increment(1),\n                price: firebase.firestore.FieldValue.increment(newVal[1].price)\n            }, { merge: true })\n    }\n\n    console.log(orderContext.productsInOrder)\n    return (\n        <>\n            <Grid container item direction='column' spacing={1}>\n                <Grid item >\n                    <Typography component='div'>\n                        <Box fontWeight='fontWeightBold'>\n                            Produse\n                        </Box>\n                    </Typography>\n                </Grid>\n                <Grid item>\n                    <TableContainer>\n                        <Table>\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell colSpan={2}>\n                                        Produs\n                                    </TableCell>\n                                    <TableCell align='right'>\n                                        Preț bucată\n                                    </TableCell>\n                                    <TableCell align='right'>\n                                        Cantitate\n                                    </TableCell>\n                                    <TableCell align='right'>\n                                        Preț total\n                                    </TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {!isEmpty(orderContext.productsInOrder) && Object.entries(orderContext.productsInOrder).map((product, index) => {\n                                    return !isEmpty(product[1]) && <OrderProductsTableRow productInOrder={product} key={product[0]} />\n                                })}\n                            </TableBody>\n                        </Table>\n                    </TableContainer>\n                </Grid>\n                <Grid item>\n                    {!isLoaded(orderContext.productsInOrder) && <LinearProgress />}\n                </Grid>\n                <Grid item>\n                    <Autocomplete\n                        onChange={addProductToOrder}\n                        options={!isEmpty(orderContext.products) ? Object.entries(orderContext.products) : []}\n                        getOptionLabel={(product) => product[1].name}\n                        getOptionSelected={(option, value) => option.name === value.name}\n                        style={{ width: 300 }}\n                        renderInput={(params) => < TextField {...params}\n                            label=\"Adaugă produs\"\n                            variant=\"outlined\"\n                        />}\n                    />\n                </Grid>\n            </Grid>\n        </>\n    )\n}","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/OrdersComponents/OrderDetails/OrderUserDetails.js",[],"/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/OrdersComponents/OrderDetails/OrderAddressDetails.js",[],"/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/OrdersComponents/OrderDetails/OrderProductsTableRow.js",["312","313","314","315"],"/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/OrdersComponents/OrderContext/OrderContext.js",["316","317"],"import React, { useContext, useEffect, useState } from 'react'\nimport { isEmpty, isLoaded, populate, useFirestoreConnect } from 'react-redux-firebase';\nimport { orderStateTypes } from '../../../utils/utils';\nimport { useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\n\n\nconst populates = [\n    { child: 'userID', root: 'users', childAlias: 'user' },\n    { child: 'addressID', root: 'addresses', childAlias: 'address' },\n    { child: 'riderID', root: 'users', childAlias: 'rider' },\n]\n\nconst OrderContext = React.createContext(null)\n\nexport function useOrderContext() {\n    return useContext(OrderContext)\n}\n\nexport function OrderProvider({ children }) {\n    const [orderTab, setOrderTab] = useState(orderStateTypes[0].state)\n    const [filterOption, setFilterOption] = useState({ option: 'createdAt', direction: 'desc' })\n    const { orderID } = useParams()\n\n    const ordersByTab = `orders-${orderTab}`\n    useFirestoreConnect(() => {\n        // console.log(props)\n        // console.log(orderTab)\n        return [\n            {\n                collection: 'orders',\n                where: [['state', '==', orderTab]],\n                orderBy: [[filterOption.option, filterOption.direction]],\n                storeAs: ordersByTab,\n            },\n            { collection: 'users' },\n            { collection: 'addresses' }\n        ]\n    })\n\n    const orders = useSelector(\n        ({ firestore }) => populate(firestore, ordersByTab, populates),\n    )\n\n    const changeOrderTab = (orderState) => {\n        setOrderTab(orderState)\n    }\n\n    const changeFilterOption = (filterOption) => {\n        setFilterOption(filterOption)\n    }\n\n    const revenueByOrderState = !isEmpty(orders) && Object.entries(orders).reduce((acc, curr) => acc + curr[1].totalPrice, 0).toFixed(2)\n\n    const storeAsOrder = `order-${orderID}`\n    useFirestoreConnect(() => {\n        return [\n            {\n                collection: 'orders',\n                doc: orderID,\n                storeAs: storeAsOrder\n            },\n            { collection: 'users' },\n            { collection: 'addresses' }\n        ]\n    })\n\n    const order = useSelector(\n        ({ firestore }) => populate(firestore, storeAsOrder, populates),\n    )\n\n    const storeAsProductsInOrder = `productsInOrder-${orderID}`\n    useFirestoreConnect(() => {\n        if (orderID)\n            return [\n                { collection: 'orders' },\n                {\n                    collection: 'orders',\n                    doc: orderID,\n                    subcollections: [{ collection: 'products' }],\n                    storeAs: storeAsProductsInOrder,\n                },\n            ]\n    })\n\n    const productsInOrder = useSelector(\n        ({ firestore }) => firestore.data[storeAsProductsInOrder]\n    )\n\n    const productsStoreAs = 'productsWithStockOrderedAlphabetically'\n    useFirestoreConnect([{\n        collection: 'products',\n        where: [['stock', '==', true]],\n        orderBy: [['name', 'asc']],\n        storeAs: productsStoreAs\n    },])\n\n    const products = useSelector(\n        ({ firestore }) => firestore.data[productsStoreAs]\n    )\n\n    const value = {\n        //vars\n        orders,\n        orderTab,\n        filterOption,\n        revenueByOrderState,\n        order,\n        orderID,\n        productsInOrder,\n        products,\n        //functions\n        changeOrderTab,\n        changeFilterOption,\n    }\n\n    return (\n        <>\n            <OrderContext.Provider value={value}>\n                {children}\n            </OrderContext.Provider>\n        </>\n    )\n}\n","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/CategoriesComponents/CategoriesTree.js",["318"],"import { Collapse, fade, makeStyles, SvgIcon, withStyles } from '@material-ui/core';\nimport { TreeItem, TreeView } from '@material-ui/lab'\nimport React, { useEffect, useState } from 'react'\nimport { isEmpty } from 'react-redux-firebase';\nimport { useCategoryContext } from './CategoryContext/CategoryContext';\nimport AddBoxOutlinedIcon from '@material-ui/icons/AddBoxOutlined';\nimport AddBoxIcon from '@material-ui/icons/AddBox';\nimport IndeterminateCheckBoxOutlinedIcon from '@material-ui/icons/IndeterminateCheckBoxOutlined';\nimport { useHistory, useLocation, useParams } from 'react-router-dom';\n\n\nfunction CloseSquare(props) {\n    return (\n        <SvgIcon className=\"close\" fontSize=\"inherit\" style={{ width: 14, height: 14 }} {...props}>\n            {/* tslint:disable-next-line: max-line-length */}\n            <path d=\"M17.485 17.512q-.281.281-.682.281t-.696-.268l-4.12-4.147-4.12 4.147q-.294.268-.696.268t-.682-.281-.281-.682.294-.669l4.12-4.147-4.12-4.147q-.294-.268-.294-.669t.281-.682.682-.281.696 .268l4.12 4.147 4.12-4.147q.294-.268.696-.268t.682.281 .281.669-.294.682l-4.12 4.147 4.12 4.147q.294.268 .294.669t-.281.682zM22.047 22.074v0 0-20.147 0h-20.12v0 20.147 0h20.12zM22.047 24h-20.12q-.803 0-1.365-.562t-.562-1.365v-20.147q0-.776.562-1.351t1.365-.575h20.147q.776 0 1.351.575t.575 1.351v20.147q0 .803-.575 1.365t-1.378.562v0z\" />\n        </SvgIcon>\n    );\n}\n\nconst StyledTreeItem = withStyles((theme) => ({\n    iconContainer: {\n        '& .close': {\n            opacity: 0.3,\n        },\n    },\n    group: {\n        marginLeft: 7,\n        paddingLeft: 18,\n        borderLeft: `1px dashed ${fade(theme.palette.text.primary, 0.4)}`,\n    },\n}))((props) => <TreeItem {...props} TransitionComponent={Collapse} />);\n\nconst useStyles = makeStyles({\n    root: {\n        maxWidth: 400,\n    },\n});\n\nexport default function CategoriesTree() {\n    const classes = useStyles();\n    const categoryContext = useCategoryContext()\n    const history = useHistory()\n    const { categoryID } = useParams()\n    const [nodes, setNodes] = useState(['1'])\n\n    useEffect(() => {\n        if (categoryID && !isEmpty(categoryContext.categories)) {\n            setNodes(['1', ...categoryContext.categories[categoryID].parentCategories, categoryID])\n        }\n    }, [categoryContext.categories, categoryID])\n\n    const nodeSelected = (e, value) => {\n        if (value === '1')\n            return history.push('/categorii/')\n\n        const addCategory = value.split('-')\n        if (addCategory[1]) {\n            history.push(`/categorii/${addCategory[0]}/adauga-subcategorie/`)\n            setNodes([...nodes, value])\n        } else {\n            history.push(`/categorii/${addCategory[0]}/detalii/`)\n        }\n    }\n\n    const toggleNodes = (e, nodes) => {\n        setNodes(nodes)\n    }\n\n    function CategoryTree(categoryID, category) {\n        if (category) {\n            return (\n                <StyledTreeItem nodeId={categoryID} label={category.name} key={categoryID}>\n                    {!isEmpty(category.childrenCategories) && category.childrenCategories.map((categoryID) => {\n                        return CategoryTree(categoryID, categoryContext.categories[categoryID])\n                    })}\n                    <StyledTreeItem nodeId={`${categoryID}-addCategory`} label='Adaugă subcategorie' key={`${categoryID}-addCategory`} endIcon={<AddBoxIcon color='primary' />} />\n                </StyledTreeItem>\n            )\n        }\n    }\n\n    return (\n        <TreeView\n            className={classes.root}\n            expanded={nodes}\n            onNodeToggle={toggleNodes}\n            defaultCollapseIcon={<IndeterminateCheckBoxOutlinedIcon />}\n            defaultExpandIcon={<AddBoxOutlinedIcon />}\n            defaultEndIcon={<CloseSquare />}\n            onNodeSelect={nodeSelected}\n        >\n            <StyledTreeItem nodeId=\"1\" label=\"Categorii\">\n                {!isEmpty(categoryContext.mainCategories) && !isEmpty(categoryContext.categories) && Object.entries(categoryContext.mainCategories).map((category) => {\n                    return CategoryTree(category[0], categoryContext.categories[category[0]])\n                })}\n            </StyledTreeItem>\n        </TreeView>\n    )\n}\n","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/CategoriesComponents/CategoryContext/CategoryContext.js",["319","320","321","322","323","324","325","326"],"import React, { useContext, useEffect, useState } from 'react'\nimport { isEmpty, isLoaded, populate, useFirestoreConnect } from 'react-redux-firebase';\nimport { orderStateTypes } from '../../../utils/utils';\nimport { useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\n\n\nconst populates = [\n    { child: 'userID', root: 'users', childAlias: 'user' },\n    { child: 'addressID', root: 'addresses', childAlias: 'address' },\n    { child: 'riderID', root: 'users', childAlias: 'rider' },\n]\n\nconst CategoryContext = React.createContext(null)\n\nexport function useCategoryContext() {\n    return useContext(CategoryContext)\n}\n\nexport function CategoryProvider({ children }) {\n    // const [orderTab, setOrderTab] = useState(orderStateTypes[0].state)\n    // const [filterOption, setFilterOption] = useState({ option: 'createdAt', direction: 'desc' })\n    const { categoryID } = useParams()\n\n    const mainCategoriesStoreAs = `categories-main`\n    useFirestoreConnect(() => {\n        // console.log(props)\n        // console.log(orderTab)\n        return [\n            {\n                collection: 'categories',\n                where: [['mainCategory', '==', true]],\n                orderBy: [['name', 'asc']],\n                storeAs: mainCategoriesStoreAs,\n            },\n        ]\n    })\n\n    const mainCategories = useSelector(\n        ({ firestore }) => firestore.data[mainCategoriesStoreAs]\n    )\n\n    useFirestoreConnect(() => {\n        // console.log(props)\n        // console.log(orderTab)\n        return [\n            {\n                collection: 'categories',\n                orderBy: [['name', 'asc']],\n            },\n        ]\n    })\n\n    const categories = useSelector(\n        ({ firestore }) => firestore.data.categories\n    )\n\n\n\n    const value = {\n        //vars\n        mainCategories,\n        categories,\n        //functions\n    }\n\n    return (\n        <>\n            <CategoryContext.Provider value={value}>\n                {children}\n            </CategoryContext.Provider>\n        </>\n    )\n}\n","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/UsersComponents/UserContext/UserContext.js",["327","328","329","330","331","332"],"/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/CategoriesComponents/CategoryDetails.js",[],"/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/CategoriesComponents/CategoryCreator.js",[],"/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/ProductsComponents/ProductsList.js",["333","334","335"],"import { Grid } from '@material-ui/core'\nimport React, { useCallback } from 'react'\nimport { isEmpty } from 'react-redux-firebase'\nimport { useParams } from 'react-router-dom'\nimport { all } from '../../utils/utils'\nimport AddProductBox from './AddProductBox'\nimport ProductBox from './ProductBox'\nimport { useProductContext } from './ProductContext/ProductContext'\nimport ProductsPageHeader from './ProductsPageHeader'\n\nexport default function ProductsList() {\n    const productContext = useProductContext()\n\n    if (isEmpty(productContext.getProducts())) {\n        return <> </>\n    }\n\n    return (\n        <Grid container direction='column' spacing={2}>\n            <Grid item>\n                <ProductsPageHeader />\n            </Grid>\n            <Grid container item spacing={2} justify='space-around' style={{ width: 'auto' }}>\n                <Grid item>\n                    <AddProductBox />\n                </Grid>\n                {productContext.getProducts().map((product, index) => {\n                    return <Grid item key={product[0]}>\n                        <ProductBox product={product[1]} productID={product[0]} />\n                    </Grid>\n                }\n                )}\n            </Grid>\n        </Grid>\n    )\n}\n","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/ProductsComponents/CategoriesTree.js",["336","337"],"import { Collapse, fade, makeStyles, SvgIcon, withStyles } from '@material-ui/core';\nimport { TreeItem, TreeView } from '@material-ui/lab'\nimport React, { useEffect, useState } from 'react'\nimport { isEmpty } from 'react-redux-firebase';\nimport AddBoxOutlinedIcon from '@material-ui/icons/AddBoxOutlined';\nimport AddBoxIcon from '@material-ui/icons/AddBox';\nimport IndeterminateCheckBoxOutlinedIcon from '@material-ui/icons/IndeterminateCheckBoxOutlined';\nimport { useHistory, useLocation, useParams } from 'react-router-dom';\nimport { useProductContext } from './ProductContext/ProductContext';\nimport { all } from '../../utils/utils';\n\nfunction CloseSquare(props) {\n    return (\n        <SvgIcon className=\"close\" fontSize=\"inherit\" style={{ width: 14, height: 14 }} {...props}>\n            {/* tslint:disable-next-line: max-line-length */}\n            <path d=\"M17.485 17.512q-.281.281-.682.281t-.696-.268l-4.12-4.147-4.12 4.147q-.294.268-.696.268t-.682-.281-.281-.682.294-.669l4.12-4.147-4.12-4.147q-.294-.268-.294-.669t.281-.682.682-.281.696 .268l4.12 4.147 4.12-4.147q.294-.268.696-.268t.682.281 .281.669-.294.682l-4.12 4.147 4.12 4.147q.294.268 .294.669t-.281.682zM22.047 22.074v0 0-20.147 0h-20.12v0 20.147 0h20.12zM22.047 24h-20.12q-.803 0-1.365-.562t-.562-1.365v-20.147q0-.776.562-1.351t1.365-.575h20.147q.776 0 1.351.575t.575 1.351v20.147q0 .803-.575 1.365t-1.378.562v0z\" />\n        </SvgIcon>\n    );\n}\n\nconst StyledTreeItem = withStyles((theme) => ({\n    iconContainer: {\n        '& .close': {\n            opacity: 0.3,\n        },\n    },\n    group: {\n        marginLeft: 7,\n        paddingLeft: 18,\n        borderLeft: `1px dashed ${fade(theme.palette.text.primary, 0.4)}`,\n    },\n}))((props) => <TreeItem {...props} TransitionComponent={Collapse} />);\n\nconst useStyles = makeStyles({\n    root: {\n        maxWidth: 400,\n    },\n});\n\nexport default function CategoriesTree() {\n    const classes = useStyles();\n    const productContext = useProductContext()\n    const history = useHistory()\n    const { categoryID } = useParams()\n    const [nodes, setNodes] = useState([all])\n\n    useEffect(() => {\n        if (categoryID === all)\n            return setNodes([all])\n        if (categoryID && !isEmpty(productContext.categories)) {\n            return setNodes([all, ...productContext.categories[categoryID].parentCategories, categoryID])\n        }\n    }, [categoryID, productContext.categories])\n\n    const nodeSelected = (e, value) => {\n        if (value === all)\n            return history.push('/categorii/toate/produse/')\n        const addProduct = value.split('-')\n        if (addProduct[1]) {\n            return history.push(`/categorii/${categoryID}/produse/adauga-produs/`)\n        } else {\n            return history.push(`/categorii/${addProduct[0]}/produse/`)\n        }\n    }\n\n    const toggleNodes = (e, nodes) => {\n        setNodes(nodes)\n    }\n\n    function CategoryTree(categoryID, category) {\n        if (category) {\n            return (\n                <StyledTreeItem nodeId={categoryID} label={category.name} key={categoryID}>\n                    {!isEmpty(category.childrenCategories) && category.childrenCategories.map((categoryID) => {\n                        return CategoryTree(categoryID, productContext.categories[categoryID])\n                    })}\n                </StyledTreeItem>\n            )\n        }\n    }\n\n    return (\n        <TreeView\n            className={classes.root}\n            expanded={nodes}\n            selected={nodes[nodes.length - 1]}\n            onNodeToggle={toggleNodes}\n            defaultCollapseIcon={<IndeterminateCheckBoxOutlinedIcon />}\n            defaultExpandIcon={<AddBoxOutlinedIcon />}\n            defaultEndIcon={<CloseSquare />}\n            onNodeSelect={nodeSelected}\n        >\n            <StyledTreeItem nodeId={all} label=\"Categorii\">\n                {!isEmpty(productContext.mainCategories) && !isEmpty(productContext.categories) && Object.entries(productContext.mainCategories).map((category) => {\n                    return CategoryTree(category[0], productContext.categories[category[0]])\n                })}\n            </StyledTreeItem>\n        </TreeView>\n    )\n}\n","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/ProductsComponents/ProductDetails.js",["338"],"import { Button, FormControlLabel, Grid, Switch, TextField, Typography } from '@material-ui/core'\nimport { Autocomplete } from '@material-ui/lab'\nimport { useSnackbar } from 'notistack'\nimport React, { useEffect, useState } from 'react'\nimport { isEmpty, useFirebase, useFirestore } from 'react-redux-firebase'\nimport { useHistory, useParams } from 'react-router-dom'\nimport { all } from '../../utils/utils'\nimport { useProductContext } from './ProductContext/ProductContext'\nimport ProductMarketBox from './ProductMarketBox'\n\nexport default function ProductDetails() {\n    const { productID, categoryID } = useParams()\n    const productContext = useProductContext()\n    const { enqueueSnackbar } = useSnackbar()\n    const firestore = useFirestore()\n    const firebase = useFirebase()\n    const [product, setProduct] = useState({})\n    const [isLoading, setIsLoading] = useState(false)\n    const [image, setImage] = useState(null)\n    const history = useHistory()\n\n    useEffect(() => {\n        if (productID && !isEmpty(productContext.products)) {\n            setProduct({ ...productContext.products[productID] })\n        }\n    }, [productContext.products, productID])\n\n    const validateForm = (product) => {\n        if (!product.name || !product.description || !product.price || !product.categories) {\n            enqueueSnackbar('Toate câmpurile trebuie completate', { variant: 'error' })\n            return false\n        }\n        if (!product.image && !image) {\n            enqueueSnackbar('Produsul trebuie să aibă o imagine', { variant: 'error' })\n            return false\n        }\n        return true\n    }\n\n    const updateProduct = async (e) => {\n        e.preventDefault()\n\n        const productToBeUpdated = { ...product }\n        if (!productToBeUpdated.categories) {\n            if (categoryID !== all) {\n                productToBeUpdated.categories = [...productContext.categories[categoryID].parentCategories, categoryID]\n            }\n        }\n\n        if (!validateForm(productToBeUpdated))\n            return\n\n        const productRef = firestore.collection('products').doc(productID)\n\n\n\n        var downloadURL = ''\n        if (image) {\n            const storage = firebase.storage()\n            const uploaded = await storage.ref(`/products/${image.name}`).put(image)\n            downloadURL = await uploaded.ref.getDownloadURL()\n            productToBeUpdated.image = downloadURL\n        }\n\n        productToBeUpdated.price = parseFloat(product.price)\n\n        await productRef.set({\n            ...productToBeUpdated,\n            enabled: productToBeUpdated.enabled ? productToBeUpdated.enabled : true,\n            stock: productToBeUpdated.stock ? productToBeUpdated.stock : true,\n            createdAt: product.createdAt ? product.createdAt : firebase.firestore.FieldValue.serverTimestamp()\n        }, { merge: true })\n\n        enqueueSnackbar('Operațiune realizată cu succes', { variant: 'success' })\n        setImage(null)\n        setProduct(productToBeUpdated)\n        history.push(`/categorii/${productToBeUpdated.categories[productToBeUpdated.categories.length - 1]}/produse/${productRef.id}/detalii`)\n    }\n\n    const handleInputImage = (e) => {\n        console.log(e)\n        if (e.target.files[0].size > 1024 * 1024 * 3) {\n            enqueueSnackbar('Dimensiunea fișierului este prea mare. Aceasta trebuie să fie mai mica de 3MB. Mai taie din ele dă-le drecu', { variant: 'error' })\n            e.target.value = product.image\n        } else {\n            setImage(e.target.files[0])\n        }\n    }\n\n    if (isEmpty(productContext.categories)) {\n        return <> </>\n    }\n\n    return (\n        <form onSubmit={updateProduct}>\n            <Grid container direction='column' spacing={5}>\n                <Grid container item justify='space-between' alignItems='center'>\n                    <Grid item>\n                        <Autocomplete\n                            onChange={(e, newVal) => setProduct({\n                                ...product,\n                                categories: [...newVal.parentCategories, newVal.id],\n                            })}\n                            options={!isEmpty(productContext.categories) ? Object.entries(productContext.categories).map(category => { return { ...category[1], id: category[0] } }) : []}\n                            getOptionLabel={(category) => category.name}\n                            getOptionSelected={(option, value) => option.id === value.id}\n                            value={!isEmpty(productContext.categories) ? productContext.categories[categoryID] : [{ name: '' }]}\n                            style={{ width: 300 }}\n                            renderInput={(params) => < TextField {...params}\n                                label=\"Categorie\"\n                                variant=\"outlined\"\n                            />}\n                            disableClearable\n                        />\n                    </Grid>\n                    <Grid item>\n                        <Typography >\n                            ID produs: {productID}\n                        </Typography>\n                    </Grid>\n                </Grid>\n                <Grid container item justify='space-between'>\n                    <Grid container item direction='column' spacing={4} xs>\n                        <Grid item>\n                            <TextField\n                                value={product.name || ''}\n                                label='Nume'\n                                variant='outlined'\n                                onChange={(e) => setProduct({ ...product, name: e.target.value })}\n                                fullWidth\n                                disabled={isLoading}\n                            />\n                        </Grid>\n                        <Grid item>\n                            <TextField\n                                value={product.description || ''}\n                                label='Descriere'\n                                variant='outlined'\n                                onChange={(e) => setProduct({ ...product, description: e.target.value })}\n                                fullWidth\n                                rows={6}\n                                multiline\n                                disabled={isLoading}\n                            />\n                        </Grid>\n                        <Grid container item justify='space-between'>\n                            <Grid item>\n                                <TextField\n                                    value={product.price || ''}\n                                    label='Preț RON'\n                                    variant='outlined'\n                                    onChange={(e) => {\n                                        console.log(e.target.value)\n                                        if (isNaN(e.target.value)) {\n                                            enqueueSnackbar('Prețul este incorect', { variant: 'error' })\n                                            return\n                                        } else {\n                                            setProduct({ ...product, price: e.target.value })\n                                        }\n                                    }}\n                                    disabled={isLoading}\n                                />\n                            </Grid>\n                            <Grid item>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={product.enabled || false}\n                                            onChange={() => setProduct({ ...product, enabled: !product.enabled })}\n                                            color='primary'\n                                        />\n                                    }\n                                    disabled={isLoading}\n                                    label={product.enabled ? 'Activ' : 'Inactiv'}\n                                    labelPlacement='top'\n                                />\n                            </Grid>\n                            <Grid item>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={product.stock || false}\n                                            onChange={() => setProduct({ ...product, stock: !product.stock })}\n                                            color='primary'\n                                        />\n                                    }\n                                    disabled={isLoading}\n                                    label={product.stock ? 'În stoc' : 'Fără stoc'}\n                                    labelPlacement='top'\n                                />\n                            </Grid>\n                        </Grid>\n                        <Grid item>\n                            <Button variant='contained' component='label' color='secondary' disabled={isLoading}>\n                                Schimbă imaginea produsului\n                                <input id='image_upload' type='file' name='image' onChange={handleInputImage} accept='image/*' hidden />\n                            </Button>\n                        </Grid>\n                        <Grid item>\n                            <Typography variant='caption' >\n                                {image ? image.name : product.image ? product.image : ''}\n                            </Typography>\n                        </Grid>\n                        <Grid item>\n                            <Button variant='contained' color='primary' type='submit' disabled={isLoading}>\n                                Aplică modificările\n                            </Button>\n                        </Grid>\n                    </Grid>\n                    <Grid container item xs direction='column' alignItems='center' spacing={4}>\n                        <Grid item>\n                            <Typography variant='h6'>\n                                Așa va arăta produsul în magazinul online\n                            </Typography>\n                        </Grid>\n                        <Grid item>\n                            <ProductMarketBox product={product} image={image} />\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </form>\n    )\n}\n","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/ProductsComponents/ProductContext/ProductContext.js",["339","340","341","342","343","344","345"],"import React, { useCallback, useContext, useEffect, useState } from 'react'\nimport { isEmpty, isLoaded, populate, useFirestoreConnect } from 'react-redux-firebase';\nimport { all, orderStateTypes } from '../../../utils/utils';\nimport { useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\n\nconst ProductContext = React.createContext(null)\n\nexport function useProductContext() {\n    return useContext(ProductContext)\n}\n\nexport function ProductProvider({ children }) {\n    const { categoryID, productID } = useParams()\n    const [filter, setFilter] = useState({ option: 'name', ascending: true })\n    const [nameFilter, setNameFilter] = useState('')\n\n    const mainCategoriesStoreAs = `categories-main`\n    useFirestoreConnect(() => {\n        return [\n            {\n                collection: 'categories',\n                where: [['mainCategory', '==', true]],\n                orderBy: [['name', 'asc']],\n                storeAs: mainCategoriesStoreAs,\n            },\n        ]\n    })\n\n    const mainCategories = useSelector(\n        ({ firestore }) => firestore.data[mainCategoriesStoreAs]\n    )\n\n    useFirestoreConnect(() => {\n        return [\n            {\n                collection: 'categories',\n                orderBy: [['name', 'asc']],\n            },\n        ]\n    })\n\n    const categories = useSelector(\n        ({ firestore }) => firestore.data.categories\n    )\n\n    const orderedProductsStoreAs = 'orderedProducts'\n    useFirestoreConnect(() => {\n        return [\n            {\n                collection: 'products',\n                orderBy: [['name', 'asc']],\n                storeAs: orderedProductsStoreAs,\n            }\n        ]\n    })\n\n    const products = useSelector(\n        ({ firestore }) => firestore.data[orderedProductsStoreAs]\n    )\n\n    const productsByCategoryStoreAs = 'productsByCategory'\n    useFirestoreConnect(() => {\n        return [\n            {\n                collection: 'products',\n                where: [['categories', 'array-contains', categoryID]],\n                storeAs: productsByCategoryStoreAs\n            }\n        ]\n    })\n\n    const productsByCategory = useSelector(\n        ({ firestore }) => firestore.data[productsByCategoryStoreAs]\n    )\n\n    const changeFilter = (newFilter) => {\n        setFilter(newFilter)\n    }\n\n    const changeNameFilter = (newFilter) => {\n        setNameFilter(newFilter)\n    }\n\n    const getProducts = () => {\n        var productsToBeReturned\n        if (categoryID === all)\n            productsToBeReturned = products\n        else\n            productsToBeReturned = productsByCategory\n        if (productsToBeReturned) {\n            const sortOption = filter.option\n            productsToBeReturned = Object.entries(productsToBeReturned).filter((product) => {\n                return product[1].name.toLowerCase().normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\").includes(nameFilter) || product[0].includes(nameFilter)\n            })\n            console.log(productsToBeReturned, 'before')\n            console.log(filter)\n            productsToBeReturned.sort((a, b) => {\n                if (filter.ascending) {\n                    return a[1][sortOption] < b[1][sortOption] ? -1 : 1\n                }\n                return a[1][sortOption] > b[1][sortOption] ? -1 : 1\n            })\n            console.log(productsToBeReturned, 'after')\n            return productsToBeReturned\n        }\n    }\n\n    const value = {\n        //vars\n        filter,\n        mainCategories,\n        categories,\n        products,\n        productsByCategory,\n\n        //functions\n        changeFilter,\n        changeNameFilter,\n        getProducts,\n    }\n\n    return (\n        <>\n            <ProductContext.Provider value={value}>\n                {children}\n            </ProductContext.Provider>\n        </>\n    )\n}\n","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/ProductsComponents/ProductCreator.js",[],"/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/ProductsComponents/ProductBox.js",["346","347","348","349"],"/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/ProductsComponents/AddProductBox.js",["350"],"import { Card, CardActionArea, CardContent, CardMedia, Grid, makeStyles, Typography } from '@material-ui/core';\nimport React from 'react'\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport { useHistory, useParams } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        maxWidth: 200,\n        height: 320,\n        width: 'auto',\n    },\n    media: {\n        height: 100,\n        width: 'auto',\n        margin: 'auto'\n    },\n}));\n\nexport default function AddProductBox() {\n    const classes = useStyles()\n    const { categoryID } = useParams()\n    const history = useHistory()\n    return (\n        <Card className={classes.root} elevation={3}>\n            <CardActionArea style={{ height: '100%' }} onClick={() => { history.push(`/categorii/${categoryID}/produse/adauga-produs/`) }}>\n                <CardContent style={{ height: '100%' }}>\n                    <Grid container direction='column' alignItems='center' justify='space-evenly' alignContent='space-around' style={{ height: '100%' }}>\n                        <Grid item>\n                            <AddCircleOutlineIcon style={{ fontSize: 80 }} color='primary' />\n                        </Grid>\n                        <Grid item>\n                            <Typography gutterBottom variant=\"h6\" component=\"h2\" align='center'>\n                                Adaugă un produs\n                            </Typography>\n                        </Grid>\n                    </Grid>\n                </CardContent>\n            </CardActionArea>\n        </Card >\n    );\n}\n","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/ProductsComponents/ProductsPageHeader.js",["351"],"import { Button, FormControl, Grid, IconButton, InputLabel, makeStyles, MenuItem, OutlinedInput, Paper, Select, withStyles } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport React, { useState } from 'react'\nimport { useProductContext } from './ProductContext/ProductContext';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\n\nexport const useStyles = makeStyles((theme) => ({\n    iconButton: {\n        marginRight: theme.spacing(1),\n        padding: theme.spacing(1, 0),\n        minWidth: 50,\n        marginLeft: -15,\n    },\n    input: {\n        color: theme.palette.info.main,\n    },\n    cssLabel: {\n        color: theme.palette.info.main,\n        \"&.Mui-focused\": {\n            color: theme.palette.info.main\n        }\n    }\n}))\n\nexport default function ProductsPageHeader() {\n    const classes = useStyles()\n    const productContext = useProductContext()\n    const [search, setSearch] = useState('')\n\n\n    const handleSearch = (e) => {\n        setSearch(e.target.value)\n    }\n\n    const makeQuery = (e) => {\n        if ((e.type === 'keyup' && e.key === 'Enter') || e.currentTarget.name === 'search') {\n            return productContext.changeNameFilter(search)\n        }\n\n    }\n\n    const changeFilterOption = (e) => {\n        productContext.changeFilter({\n            ...productContext.filter,\n            option: e.target.value,\n        })\n    }\n\n    const changeFilterDirection = (e) => {\n        productContext.changeFilter({\n            ...productContext.filter,\n            ascending: !productContext.filter.ascending,\n        })\n    }\n\n    return (\n        <Paper style={{ padding: 8 }} elevation={3}>\n            <Grid container direction='row' justify='space-around' alignContent='center' alignItems='center' spacing={2} >\n                <Grid item sm={12} md={6}>\n                    <OutlinedInput\n                        placeholder='Caută un produs'\n                        variant='outlined'\n                        margin='dense'\n                        fullWidth\n                        name='searchQuery'\n                        onChange={handleSearch}\n                        onKeyUp={makeQuery}\n                        value={search}\n                        startAdornment={\n                            <Button className={classes.iconButton} color='primary' name='search' onClick={makeQuery}>\n                                <SearchIcon />\n                            </Button>\n                        } />\n                </Grid>\n                <Grid container xs item justify='flex-end' spacing={3} >\n                    <Grid item >\n                        <FormControl variant='outlined'>\n                            <InputLabel id=\"sort-label\" >Sortează</InputLabel>\n                            <Select\n                                labelId=\"sort-label\"\n                                value={productContext.filter.option}\n                                name='sort'\n                                onChange={changeFilterOption}\n                                margin='dense'\n                                input={<OutlinedInput notched label='Sortează' />}\n                            >\n                                <MenuItem value={'createdAt'}>După poziție</MenuItem>\n                                <MenuItem value={'price'}>Preț</MenuItem>\n                                <MenuItem value={'name'}>Alfabetic</MenuItem>\n                            </Select>\n                        </FormControl>\n                    </Grid>\n                    <Grid item>\n                        <IconButton onClick={changeFilterDirection} color='primary'>\n                            {productContext.filter.ascending ? <ArrowUpwardIcon /> : <ArrowDownwardIcon />}\n                        </IconButton>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Paper>\n    )\n}\n","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/ProductsComponents/ProductMarketBox.js",["352","353","354","355"],"import { Badge, Box, Button, fade, IconButton, makeStyles, Paper, Typography } from \"@material-ui/core\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { firebaseFunctions } from \"../..\";\nimport { useProductContext } from \"./ProductContext/ProductContext\";\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport AddIcon from '@material-ui/icons/Add';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport { useEffect, useState } from \"react\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        display: 'inline-flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        margin: theme.spacing(1),\n        padding: theme.spacing(2),\n        maxWidth: 200,\n    },\n    container: {\n        display: 'inline-flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    quantitySelector: {\n        borderRadius: 5,\n        border: 1,\n        borderStyle: 'solid',\n        display: 'flex',\n        alignContent: 'stretch',\n        alignItems: 'stretch',\n        justifyContent: 'stretch',\n        height: 30,\n    },\n    quantityTypography: {\n        maxWidth: 180,\n        marginBottom: theme.spacing(1)\n    },\n    quantityIncrement: {\n        borderLeft: 1,\n        borderColor: theme.palette.info.main,\n        borderStyle: 'solid',\n        borderRadius: 0,\n    },\n    quantityDecrement: {\n        borderRight: 1,\n        borderColor: theme.palette.info.main,\n        borderStyle: 'solid',\n        borderRadius: 0,\n    },\n    quantityInput: {\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        width: 50,\n        display: 'flex',\n        alignContent: 'center',\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    image: {\n        marginBottom: theme.spacing(3),\n        // maxHeight: 100,\n        // maxWidth: 100,\n        width: 'auto',\n        height: 100,\n        margin: 'auto',\n    },\n    favorite: {\n        color: theme.palette.error.main,\n        \"&:hover\": {\n            backgroundColor: fade(theme.palette.error.main, theme.palette.action.hoverOpacity),\n            '@media (hover: none)': {\n                backgroundColor: 'transparent',\n            },\n        }\n    }\n}));\n\nexport default function ProductMarketBox({ product, image }) {\n    const classes = useStyles()\n    const [imageURL, setImageURL] = useState('')\n\n    useEffect(() => {\n        if (image) {\n            const imageURL = URL.createObjectURL(image)\n            setImageURL(imageURL)\n\n            return () => URL.revokeObjectURL(imageURL)\n        }\n    }, [image])\n\n    if (!product) {\n        return <> </>\n    }\n\n    return (\n        <>\n            <Paper className={classes.paper} elevation={3}>\n                <Badge badgeContent={\n                    <IconButton className={classes.favorite} >\n                        <FavoriteBorderIcon color='error' />\n                    </IconButton>\n                }>\n                    <div className={classes.container}>\n                        <img className={classes.image} src={image ? imageURL : product.image} alt={product.name} />\n                        <Typography color='primary' align='center' style={{ maxWidth: 200, height: 48 }} >\n                            {product.name}\n                        </Typography>\n                    </div>\n                </Badge>\n                <div className={classes.paper} style={{ padding: 10 }}>\n                    <Typography className={classes.quantityTypography} variant='button'>\n                        Cantitate\n                        </Typography>\n                    <div className={classes.quantitySelector}>\n                        <IconButton\n                            className={classes.quantityDecrement}\n                            id='decrement'\n                        >\n                            <RemoveIcon />\n                        </IconButton>\n                        <Typography\n                            className={classes.quantityInput}\n                            align='center'\n                            variant='h6'\n                        >\n                            1\n                        </Typography>\n                        <IconButton\n                            className={classes.quantityIncrement}\n                            id='increment'\n                        >\n                            <AddIcon />\n                        </IconButton>\n                    </div>\n                </div>\n                <Typography variant='h6' color='error' style={{ marginBottom: 10 }}>\n                    <Box fontWeight='fontWeightBold'>\n                        {product.price} RON\n                    </Box>\n                </Typography>\n                <Button\n                    color='primary'\n                    variant='contained'\n                    startIcon={<ShoppingCartIcon />}\n                >\n                    Adaugă în coș\n                    </Button>\n            </Paper>\n        </>\n    )\n}","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/UsersComponents/UsersTable.js",[],"/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/UsersComponents/UsersTableHead.js",["356"],"/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/UsersComponents/UsersTableBody.js",[],"/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/UsersComponents/UserDetails.js",["357"],"/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/UsersComponents/PersonalData.js",["358","359","360","361","362","363","364","365","366"],"/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/UsersComponents/AddressForm.js",[],"/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/UsersComponents/UserAddresses.js",["367"],"/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/UsersComponents/OrdersTable/OrdersTable.js",["368"],"import { Grid, LinearProgress, Table, TableBody, TableContainer, Typography } from '@material-ui/core'\nimport React from 'react'\nimport OrdersTableHead from './OrdersTableHead'\nimport OrdersTableRow from './OrdersTableRow'\nimport { isEmpty, isLoaded } from 'react-redux-firebase'\nimport DeliveredOrdersTableFooter from './DeliveredOrdersTableFooter'\nimport { useUserContext } from '../UserContext/UserContext'\n\nexport default function OrdersTable() {\n    const userContext = useUserContext()\n\n    return (\n        <>\n            <Grid container direction='column' spacing={2}>\n                <Grid item>\n                    <TableContainer>\n                        <Table>\n                            <OrdersTableHead showRider={true} />\n                            <TableBody>\n                                {!isEmpty(userContext.userOrders) ? Object.entries(userContext.userOrders).filter((order) => order[1].state === 'delivered').map((order) => {\n                                    return <OrdersTableRow order={order[1]} id={order[0]} key={order[0]} />\n                                }) : 'Nu există comenzi'}\n                            </TableBody>\n                            <DeliveredOrdersTableFooter />\n                        </Table>\n                    </TableContainer>\n                </Grid>\n                <Grid item>\n                    {!isLoaded(userContext.userOrders) && <LinearProgress />}\n                </Grid>\n            </Grid>\n        </>\n    )\n}\n","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/UsersComponents/OrdersTable/DeliveredOrdersTableFooter.js",[],"/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/UsersComponents/OrdersTable/OrdersTableRow.js",["369"],"import { IconButton, TableCell, TableRow } from '@material-ui/core'\nimport React from 'react'\nimport { useHistory } from \"react-router-dom\";\n\nexport default function OrdersTableRow({ id, order }) {\n    const history = useHistory()\n\n    const orderClicked = () => {\n        history.push(`/comenzi/${id}/detalii`)\n    }\n\n    return (\n        <>\n            <TableRow\n                key={id}\n                hover\n                onClick={orderClicked}\n            >\n                <TableCell>\n                    {new Date(order.createdAt.seconds * 1000).toLocaleString('ro-RO')}\n                </TableCell>\n                <TableCell>\n                    {id}\n                </TableCell>\n                <TableCell>\n                    {order.address ? order.address.street : order.addressID}\n                </TableCell>\n                {order.state !== 'pending' && <TableCell>\n                    {order.rider ? `${order.rider.firstName}  ${order.rider.lastName}` : order.riderID}\n                </TableCell>}\n                <TableCell align='right'>\n                    {order.quantity}\n                </TableCell>\n                <TableCell align='right'>\n                    RON {order.totalPrice.toFixed(2)}\n                </TableCell>\n            </TableRow>\n        </>\n    )\n}\n","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/UsersComponents/OrdersTable/OrdersTableHead.js",[],"/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/UsersComponents/ProductsList.js",["370"],{"ruleId":"371","severity":1,"message":"372","line":73,"column":7,"nodeType":"373","messageId":"374","endLine":73,"endColumn":13},{"ruleId":"375","replacedBy":"376"},{"ruleId":"377","replacedBy":"378"},{"ruleId":"371","severity":1,"message":"379","line":3,"column":35,"nodeType":"373","messageId":"374","endLine":3,"endColumn":45},{"ruleId":"371","severity":1,"message":"380","line":8,"column":8,"nodeType":"373","messageId":"374","endLine":8,"endColumn":21},{"ruleId":"371","severity":1,"message":"381","line":9,"column":8,"nodeType":"373","messageId":"374","endLine":9,"endColumn":20},{"ruleId":"371","severity":1,"message":"382","line":9,"column":24,"nodeType":"373","messageId":"374","endLine":9,"endColumn":46},{"ruleId":"371","severity":1,"message":"383","line":10,"column":10,"nodeType":"373","messageId":"374","endLine":10,"endColumn":23},{"ruleId":"371","severity":1,"message":"384","line":6,"column":18,"nodeType":"373","messageId":"374","endLine":6,"endColumn":28},{"ruleId":"371","severity":1,"message":"385","line":6,"column":30,"nodeType":"373","messageId":"374","endLine":6,"endColumn":34},{"ruleId":"371","severity":1,"message":"386","line":6,"column":54,"nodeType":"373","messageId":"374","endLine":6,"endColumn":64},{"ruleId":"371","severity":1,"message":"387","line":49,"column":11,"nodeType":"373","messageId":"374","endLine":49,"endColumn":18},{"ruleId":"371","severity":1,"message":"388","line":51,"column":11,"nodeType":"373","messageId":"374","endLine":51,"endColumn":18},{"ruleId":"371","severity":1,"message":"389","line":63,"column":33,"nodeType":"373","messageId":"374","endLine":63,"endColumn":39},{"ruleId":"371","severity":1,"message":"390","line":63,"column":48,"nodeType":"373","messageId":"374","endLine":63,"endColumn":59},{"ruleId":"371","severity":1,"message":"391","line":63,"column":61,"nodeType":"373","messageId":"374","endLine":63,"endColumn":80},{"ruleId":"371","severity":1,"message":"392","line":63,"column":82,"nodeType":"373","messageId":"374","endLine":63,"endColumn":94},{"ruleId":"371","severity":1,"message":"393","line":7,"column":10,"nodeType":"373","messageId":"374","endLine":7,"endColumn":27},{"ruleId":"371","severity":1,"message":"394","line":7,"column":8,"nodeType":"373","messageId":"374","endLine":7,"endColumn":14},{"ruleId":"371","severity":1,"message":"395","line":10,"column":8,"nodeType":"373","messageId":"374","endLine":10,"endColumn":23},{"ruleId":"371","severity":1,"message":"396","line":13,"column":8,"nodeType":"373","messageId":"374","endLine":13,"endColumn":22},{"ruleId":"371","severity":1,"message":"397","line":16,"column":8,"nodeType":"373","messageId":"374","endLine":16,"endColumn":20},{"ruleId":"371","severity":1,"message":"398","line":1,"column":10,"nodeType":"373","messageId":"374","endLine":1,"endColumn":13},{"ruleId":"371","severity":1,"message":"399","line":2,"column":17,"nodeType":"373","messageId":"374","endLine":2,"endColumn":25},{"ruleId":"371","severity":1,"message":"400","line":3,"column":10,"nodeType":"373","messageId":"374","endLine":3,"endColumn":14},{"ruleId":"371","severity":1,"message":"401","line":3,"column":8,"nodeType":"373","messageId":"374","endLine":3,"endColumn":23},{"ruleId":"371","severity":1,"message":"399","line":2,"column":17,"nodeType":"373","messageId":"374","endLine":2,"endColumn":25},{"ruleId":"371","severity":1,"message":"402","line":1,"column":10,"nodeType":"373","messageId":"374","endLine":1,"endColumn":20},{"ruleId":"371","severity":1,"message":"400","line":3,"column":10,"nodeType":"373","messageId":"374","endLine":3,"endColumn":14},{"ruleId":"371","severity":1,"message":"403","line":3,"column":16,"nodeType":"373","messageId":"374","endLine":3,"endColumn":21},{"ruleId":"371","severity":1,"message":"398","line":1,"column":10,"nodeType":"373","messageId":"374","endLine":1,"endColumn":13},{"ruleId":"371","severity":1,"message":"404","line":1,"column":70,"nodeType":"373","messageId":"374","endLine":1,"endColumn":78},{"ruleId":"371","severity":1,"message":"405","line":1,"column":80,"nodeType":"373","messageId":"374","endLine":1,"endColumn":86},{"ruleId":"371","severity":1,"message":"406","line":1,"column":88,"nodeType":"373","messageId":"374","endLine":1,"endColumn":93},{"ruleId":"371","severity":1,"message":"407","line":1,"column":95,"nodeType":"373","messageId":"374","endLine":1,"endColumn":104},{"ruleId":"371","severity":1,"message":"408","line":1,"column":106,"nodeType":"373","messageId":"374","endLine":1,"endColumn":115},{"ruleId":"371","severity":1,"message":"409","line":1,"column":117,"nodeType":"373","messageId":"374","endLine":1,"endColumn":131},{"ruleId":"371","severity":1,"message":"410","line":1,"column":133,"nodeType":"373","messageId":"374","endLine":1,"endColumn":142},{"ruleId":"371","severity":1,"message":"411","line":1,"column":144,"nodeType":"373","messageId":"374","endLine":1,"endColumn":152},{"ruleId":"371","severity":1,"message":"386","line":1,"column":154,"nodeType":"373","messageId":"374","endLine":1,"endColumn":164},{"ruleId":"371","severity":1,"message":"412","line":2,"column":17,"nodeType":"373","messageId":"374","endLine":2,"endColumn":26},{"ruleId":"371","severity":1,"message":"379","line":3,"column":21,"nodeType":"373","messageId":"374","endLine":3,"endColumn":31},{"ruleId":"371","severity":1,"message":"413","line":10,"column":10,"nodeType":"373","messageId":"374","endLine":10,"endColumn":26},{"ruleId":"371","severity":1,"message":"414","line":10,"column":37,"nodeType":"373","messageId":"374","endLine":10,"endColumn":45},{"ruleId":"371","severity":1,"message":"415","line":11,"column":10,"nodeType":"373","messageId":"374","endLine":11,"endColumn":17},{"ruleId":"371","severity":1,"message":"416","line":12,"column":10,"nodeType":"373","messageId":"374","endLine":12,"endColumn":17},{"ruleId":"371","severity":1,"message":"417","line":59,"column":11,"nodeType":"373","messageId":"374","endLine":59,"endColumn":18},{"ruleId":"371","severity":1,"message":"418","line":63,"column":14,"nodeType":"373","messageId":"374","endLine":63,"endColumn":26},{"ruleId":"371","severity":1,"message":"419","line":3,"column":10,"nodeType":"373","messageId":"374","endLine":3,"endColumn":18},{"ruleId":"371","severity":1,"message":"420","line":2,"column":15,"nodeType":"373","messageId":"374","endLine":2,"endColumn":21},{"ruleId":"371","severity":1,"message":"421","line":2,"column":23,"nodeType":"373","messageId":"374","endLine":2,"endColumn":39},{"ruleId":"371","severity":1,"message":"422","line":2,"column":47,"nodeType":"373","messageId":"374","endLine":2,"endColumn":61},{"ruleId":"371","severity":1,"message":"412","line":3,"column":17,"nodeType":"373","messageId":"374","endLine":3,"endColumn":26},{"ruleId":"371","severity":1,"message":"415","line":4,"column":10,"nodeType":"373","messageId":"374","endLine":4,"endColumn":17},{"ruleId":"371","severity":1,"message":"413","line":5,"column":10,"nodeType":"373","messageId":"374","endLine":5,"endColumn":26},{"ruleId":"371","severity":1,"message":"414","line":5,"column":47,"nodeType":"373","messageId":"374","endLine":5,"endColumn":55},{"ruleId":"371","severity":1,"message":"416","line":6,"column":10,"nodeType":"373","messageId":"374","endLine":6,"endColumn":17},{"ruleId":"371","severity":1,"message":"420","line":1,"column":10,"nodeType":"373","messageId":"374","endLine":1,"endColumn":16},{"ruleId":"371","severity":1,"message":"423","line":1,"column":18,"nodeType":"373","messageId":"374","endLine":1,"endColumn":26},{"ruleId":"371","severity":1,"message":"415","line":3,"column":10,"nodeType":"373","messageId":"374","endLine":3,"endColumn":17},{"ruleId":"371","severity":1,"message":"416","line":5,"column":10,"nodeType":"373","messageId":"374","endLine":5,"endColumn":17},{"ruleId":"371","severity":1,"message":"412","line":1,"column":29,"nodeType":"373","messageId":"374","endLine":1,"endColumn":38},{"ruleId":"371","severity":1,"message":"419","line":2,"column":19,"nodeType":"373","messageId":"374","endLine":2,"endColumn":27},{"ruleId":"371","severity":1,"message":"424","line":9,"column":22,"nodeType":"373","messageId":"374","endLine":9,"endColumn":33},{"ruleId":"371","severity":1,"message":"412","line":1,"column":29,"nodeType":"373","messageId":"374","endLine":1,"endColumn":38},{"ruleId":"371","severity":1,"message":"399","line":1,"column":40,"nodeType":"373","messageId":"374","endLine":1,"endColumn":48},{"ruleId":"371","severity":1,"message":"425","line":2,"column":10,"nodeType":"373","messageId":"374","endLine":2,"endColumn":17},{"ruleId":"371","severity":1,"message":"419","line":2,"column":19,"nodeType":"373","messageId":"374","endLine":2,"endColumn":27},{"ruleId":"371","severity":1,"message":"414","line":2,"column":29,"nodeType":"373","messageId":"374","endLine":2,"endColumn":37},{"ruleId":"371","severity":1,"message":"426","line":3,"column":10,"nodeType":"373","messageId":"374","endLine":3,"endColumn":25},{"ruleId":"371","severity":1,"message":"427","line":8,"column":7,"nodeType":"373","messageId":"374","endLine":8,"endColumn":16},{"ruleId":"371","severity":1,"message":"428","line":23,"column":13,"nodeType":"373","messageId":"374","endLine":23,"endColumn":23},{"ruleId":"371","severity":1,"message":"412","line":1,"column":29,"nodeType":"373","messageId":"374","endLine":1,"endColumn":38},{"ruleId":"371","severity":1,"message":"419","line":2,"column":19,"nodeType":"373","messageId":"374","endLine":2,"endColumn":27},{"ruleId":"371","severity":1,"message":"426","line":3,"column":10,"nodeType":"373","messageId":"374","endLine":3,"endColumn":25},{"ruleId":"371","severity":1,"message":"429","line":30,"column":12,"nodeType":"373","messageId":"374","endLine":30,"endColumn":18},{"ruleId":"371","severity":1,"message":"430","line":30,"column":20,"nodeType":"373","messageId":"374","endLine":30,"endColumn":29},{"ruleId":"371","severity":1,"message":"431","line":32,"column":11,"nodeType":"373","messageId":"374","endLine":32,"endColumn":19},{"ruleId":"371","severity":1,"message":"432","line":2,"column":17,"nodeType":"373","messageId":"374","endLine":2,"endColumn":28},{"ruleId":"371","severity":1,"message":"433","line":4,"column":10,"nodeType":"373","messageId":"374","endLine":4,"endColumn":19},{"ruleId":"371","severity":1,"message":"434","line":5,"column":10,"nodeType":"373","messageId":"374","endLine":5,"endColumn":13},{"ruleId":"371","severity":1,"message":"435","line":6,"column":8,"nodeType":"373","messageId":"374","endLine":6,"endColumn":18},{"ruleId":"371","severity":1,"message":"424","line":8,"column":22,"nodeType":"373","messageId":"374","endLine":8,"endColumn":33},{"ruleId":"371","severity":1,"message":"436","line":18,"column":23,"nodeType":"373","messageId":"374","endLine":18,"endColumn":35},{"ruleId":"371","severity":1,"message":"432","line":1,"column":17,"nodeType":"373","messageId":"374","endLine":1,"endColumn":28},{"ruleId":"371","severity":1,"message":"412","line":1,"column":42,"nodeType":"373","messageId":"374","endLine":1,"endColumn":51},{"ruleId":"371","severity":1,"message":"425","line":2,"column":10,"nodeType":"373","messageId":"374","endLine":2,"endColumn":17},{"ruleId":"371","severity":1,"message":"419","line":2,"column":19,"nodeType":"373","messageId":"374","endLine":2,"endColumn":27},{"ruleId":"371","severity":1,"message":"414","line":2,"column":29,"nodeType":"373","messageId":"374","endLine":2,"endColumn":37},{"ruleId":"371","severity":1,"message":"426","line":3,"column":15,"nodeType":"373","messageId":"374","endLine":3,"endColumn":30},{"ruleId":"371","severity":1,"message":"437","line":14,"column":25,"nodeType":"373","messageId":"374","endLine":14,"endColumn":34},{"ruleId":"371","severity":1,"message":"420","line":1,"column":10,"nodeType":"373","messageId":"374","endLine":1,"endColumn":16},{"ruleId":"371","severity":1,"message":"438","line":2,"column":23,"nodeType":"373","messageId":"374","endLine":2,"endColumn":30},{"ruleId":"371","severity":1,"message":"433","line":4,"column":22,"nodeType":"373","messageId":"374","endLine":4,"endColumn":31},{"ruleId":"371","severity":1,"message":"439","line":5,"column":10,"nodeType":"373","messageId":"374","endLine":5,"endColumn":27},{"ruleId":"371","severity":1,"message":"440","line":1,"column":45,"nodeType":"373","messageId":"374","endLine":1,"endColumn":54},{"ruleId":"371","severity":1,"message":"441","line":1,"column":113,"nodeType":"373","messageId":"374","endLine":1,"endColumn":123},{"ruleId":"371","severity":1,"message":"400","line":2,"column":10,"nodeType":"373","messageId":"374","endLine":2,"endColumn":14},{"ruleId":"371","severity":1,"message":"433","line":2,"column":16,"nodeType":"373","messageId":"374","endLine":2,"endColumn":25},{"ruleId":"371","severity":1,"message":"393","line":3,"column":10,"nodeType":"373","messageId":"374","endLine":3,"endColumn":27},{"ruleId":"371","severity":1,"message":"439","line":4,"column":10,"nodeType":"373","messageId":"374","endLine":4,"endColumn":27},{"ruleId":"371","severity":1,"message":"399","line":2,"column":17,"nodeType":"373","messageId":"374","endLine":2,"endColumn":25},{"ruleId":"371","severity":1,"message":"420","line":1,"column":57,"nodeType":"373","messageId":"374","endLine":1,"endColumn":63},{"ruleId":"371","severity":1,"message":"442","line":1,"column":18,"nodeType":"373","messageId":"374","endLine":1,"endColumn":29},{"ruleId":"371","severity":1,"message":"443","line":1,"column":49,"nodeType":"373","messageId":"374","endLine":1,"endColumn":54},{"ruleId":"371","severity":1,"message":"444","line":3,"column":8,"nodeType":"373","messageId":"374","endLine":3,"endColumn":17},{"ruleId":"371","severity":1,"message":"445","line":4,"column":8,"nodeType":"373","messageId":"374","endLine":4,"endColumn":16},{"ruleId":"371","severity":1,"message":"446","line":5,"column":8,"nodeType":"373","messageId":"374","endLine":5,"endColumn":18},{"ruleId":"371","severity":1,"message":"447","line":6,"column":10,"nodeType":"373","messageId":"374","endLine":6,"endColumn":21},{"ruleId":"371","severity":1,"message":"393","line":7,"column":10,"nodeType":"373","messageId":"374","endLine":7,"endColumn":27},{"ruleId":"371","severity":1,"message":"448","line":7,"column":29,"nodeType":"373","messageId":"374","endLine":7,"endColumn":40},{"ruleId":"371","severity":1,"message":"417","line":42,"column":11,"nodeType":"373","messageId":"374","endLine":42,"endColumn":18},{"ruleId":"371","severity":1,"message":"419","line":3,"column":19,"nodeType":"373","messageId":"374","endLine":3,"endColumn":27},{"ruleId":"371","severity":1,"message":"386","line":1,"column":66,"nodeType":"373","messageId":"374","endLine":1,"endColumn":76},{"ruleId":"371","severity":1,"message":"402","line":1,"column":10,"nodeType":"373","messageId":"374","endLine":1,"endColumn":20},{"ruleId":"371","severity":1,"message":"386","line":1,"column":16,"nodeType":"373","messageId":"374","endLine":1,"endColumn":26},"no-unused-vars","'styles' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["449"],"no-negated-in-lhs",["450"],"'withRouter' is defined but never used.","'PageContainer' is defined but never used.","'OrderDetails' is defined but never used.","'OrderDetailsWithRouter' is defined but never used.","'OrderProvider' is defined but never used.","'capitalize' is defined but never used.","'Grid' is defined but never used.","'Typography' is defined but never used.","'profile' is assigned a value but never used.","'history' is assigned a value but never used.","'signUp' is assigned a value but never used.","'loginAction' is assigned a value but never used.","'resetPasswordAction' is assigned a value but never used.","'signUpAction' is assigned a value but never used.","'firebaseFunctions' is defined but never used.","'Market' is defined but never used.","'OrdersWithStore' is defined but never used.","'ProductCreator' is defined but never used.","'ProductsList' is defined but never used.","'Box' is defined but never used.","'useState' is defined but never used.","'Link' is defined but never used.","'CategoryDetails' is defined but never used.","'IconButton' is defined but never used.","'Route' is defined but never used.","'MenuItem' is defined but never used.","'Select' is defined but never used.","'Table' is defined but never used.","'TableBody' is defined but never used.","'TableCell' is defined but never used.","'TableContainer' is defined but never used.","'TableHead' is defined but never used.","'TableRow' is defined but never used.","'useEffect' is defined but never used.","'firestoreConnect' is defined but never used.","'populate' is defined but never used.","'connect' is defined but never used.","'compose' is defined but never used.","'classes' is assigned a value but never used.","'OrderActions' is defined but never used.","'isLoaded' is defined but never used.","'Button' is defined but never used.","'CircularProgress' is defined but never used.","'InputAdornment' is defined but never used.","'Checkbox' is defined but never used.","'useLocation' is defined but never used.","'isEmpty' is defined but never used.","'orderStateTypes' is defined but never used.","'populates' is assigned a value but never used.","'categoryID' is assigned a value but never used.","'filter' is assigned a value but never used.","'setFilter' is assigned a value but never used.","'firebase' is assigned a value but never used.","'useCallback' is defined but never used.","'useParams' is defined but never used.","'all' is defined but never used.","'AddBoxIcon' is defined but never used.","'setIsLoading' is assigned a value but never used.","'productID' is assigned a value but never used.","'useMemo' is defined but never used.","'useProductContext' is defined but never used.","'CardMedia' is defined but never used.","'withStyles' is defined but never used.","'ButtonGroup' is defined but never used.","'Paper' is defined but never used.","'CloseIcon' is defined but never used.","'SaveIcon' is defined but never used.","'UpdateIcon' is defined but never used.","'useSelector' is defined but never used.","'firestoreDB' is defined but never used.","no-global-assign","no-unsafe-negation"]