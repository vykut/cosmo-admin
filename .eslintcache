[{"/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/index.js":"1","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/redux/reducers/firebaseReducers.js":"2","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/App.js":"3","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/HeaderComponents/Header.js":"4","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/LoginComponents/LoginLogic.js":"5","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/LoginComponents/SignIn.js":"6","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/LoginComponents/ResetPassword.js":"7","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/utils/utils.js":"8","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/DashboardComponents/Dashboard.js":"9","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/HeaderComponents/AdminDrawer.js":"10","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/MarketComponents/Market.js":"11","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/ProductsComponents/Products.js":"12","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/CategoriesComponents/Categories.js":"13","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/OrdersComponents/Orders.js":"14","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/AuxiliaryComponents/PageContainer.js":"15","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/AuxiliaryComponents/TitleGrid.js":"16","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/UsersComponents/Users.js":"17","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/OrdersComponents/OrdersTable/OrdersTable.js":"18","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/OrdersComponents/OrdersTable/OrdersTableRow.js":"19","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/OrdersComponents/OrdersTable/OrdersTableHead.js":"20","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/OrdersComponents/OrdersTable/DeliveredOrdersTableFooter.js":"21","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/OrdersComponents/OrderDetails/OrderDetails.js":"22","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/OrdersComponents/OrderDetails/OrderNotes.js":"23","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/OrdersComponents/OrderDetails/OrderCustomerDetails.js":"24","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/OrdersComponents/OrderDetails/OrderTotal.js":"25","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/OrdersComponents/OrderDetails/OrderHeader.js":"26","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/OrdersComponents/OrderDetails/OrderProducts.js":"27","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/OrdersComponents/OrderDetails/OrderUserDetails.js":"28","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/OrdersComponents/OrderDetails/OrderAddressDetails.js":"29","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/OrdersComponents/OrderDetails/OrderProductsTableRow.js":"30","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/OrdersComponents/OrderContext/OrderContext.js":"31","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/CategoriesComponents/CategoriesTree.js":"32","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/CategoriesComponents/CategoryContext/CategoryContext.js":"33","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/UsersComponents/UserContext/UserContext.js":"34","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/CategoriesComponents/CategoryDetails.js":"35","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/CategoriesComponents/CategoryCreator.js":"36","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/ProductsComponents/ProductsList.js":"37","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/ProductsComponents/CategoriesTree.js":"38","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/ProductsComponents/ProductDetails.js":"39","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/ProductsComponents/ProductContext/ProductContext.js":"40","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/ProductsComponents/ProductCreator.js":"41","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/ProductsComponents/ProductBox.js":"42","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/ProductsComponents/AddProductBox.js":"43","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/ProductsComponents/ProductsPageHeader.js":"44","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/ProductsComponents/ProductMarketBox.js":"45"},{"size":2677,"mtime":1609335035004,"results":"46","hashOfConfig":"47"},{"size":262,"mtime":1609111624259,"results":"48","hashOfConfig":"47"},{"size":2423,"mtime":1609307765956,"results":"49","hashOfConfig":"47"},{"size":2670,"mtime":1609296581842,"results":"50","hashOfConfig":"47"},{"size":3765,"mtime":1609111934363,"results":"51","hashOfConfig":"47"},{"size":5138,"mtime":1609111934343,"results":"52","hashOfConfig":"47"},{"size":3321,"mtime":1609111802096,"results":"53","hashOfConfig":"47"},{"size":4978,"mtime":1609345325624,"results":"54","hashOfConfig":"47"},{"size":137,"mtime":1609115517813,"results":"55","hashOfConfig":"47"},{"size":1441,"mtime":1609288443449,"results":"56","hashOfConfig":"47"},{"size":132,"mtime":1609118000534,"results":"57","hashOfConfig":"47"},{"size":638,"mtime":1609310857483,"results":"58","hashOfConfig":"47"},{"size":625,"mtime":1609292162797,"results":"59","hashOfConfig":"47"},{"size":930,"mtime":1609197592310,"results":"60","hashOfConfig":"47"},{"size":1132,"mtime":1609118745264,"results":"61","hashOfConfig":"47"},{"size":1287,"mtime":1609291801023,"results":"62","hashOfConfig":"47"},{"size":135,"mtime":1609121524499,"results":"63","hashOfConfig":"47"},{"size":2101,"mtime":1609202047243,"results":"64","hashOfConfig":"47"},{"size":1464,"mtime":1609135963341,"results":"65","hashOfConfig":"47"},{"size":1086,"mtime":1609126440231,"results":"66","hashOfConfig":"47"},{"size":626,"mtime":1609201515301,"results":"67","hashOfConfig":"47"},{"size":6171,"mtime":1609208135582,"results":"68","hashOfConfig":"47"},{"size":1752,"mtime":1609211502542,"results":"69","hashOfConfig":"47"},{"size":805,"mtime":1609208126687,"results":"70","hashOfConfig":"47"},{"size":2077,"mtime":1609205176792,"results":"71","hashOfConfig":"47"},{"size":1731,"mtime":1609210836704,"results":"72","hashOfConfig":"47"},{"size":4343,"mtime":1609219057573,"results":"73","hashOfConfig":"47"},{"size":2784,"mtime":1609209278416,"results":"74","hashOfConfig":"47"},{"size":4286,"mtime":1609215238557,"results":"75","hashOfConfig":"47"},{"size":4582,"mtime":1609219134073,"results":"76","hashOfConfig":"47"},{"size":3561,"mtime":1609218542839,"results":"77","hashOfConfig":"47"},{"size":4199,"mtime":1609306950148,"results":"78","hashOfConfig":"47"},{"size":2034,"mtime":1609284933426,"results":"79","hashOfConfig":"47"},{"size":1285,"mtime":1609289040955,"results":"80","hashOfConfig":"47"},{"size":5217,"mtime":1609301175445,"results":"81","hashOfConfig":"47"},{"size":2709,"mtime":1609302410937,"results":"82","hashOfConfig":"47"},{"size":1245,"mtime":1609344515698,"results":"83","hashOfConfig":"47"},{"size":4151,"mtime":1609322681313,"results":"84","hashOfConfig":"47"},{"size":10565,"mtime":1609345511043,"results":"85","hashOfConfig":"47"},{"size":3809,"mtime":1609328213848,"results":"86","hashOfConfig":"47"},{"size":146,"mtime":1609307816729,"results":"87","hashOfConfig":"47"},{"size":3434,"mtime":1609344671719,"results":"88","hashOfConfig":"47"},{"size":1589,"mtime":1609341236452,"results":"89","hashOfConfig":"47"},{"size":3944,"mtime":1609317176311,"results":"90","hashOfConfig":"47"},{"size":5090,"mtime":1609338934761,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"12x9up6",{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"96"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"96"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"96"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"96"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"96"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"96"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"96"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"96"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"96"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"96"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"167","messages":"168","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"96"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"178","messages":"179","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"182","messages":"183","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"192","messages":"193","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/index.js",["194"],"/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/redux/reducers/firebaseReducers.js",[],["195","196"],"/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/App.js",["197","198","199","200","201"],"/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/HeaderComponents/Header.js",["202","203","204","205","206"],"/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/LoginComponents/LoginLogic.js",["207","208","209","210"],"import { Box, Container, Grid, Link, makeStyles, Typography } from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport React, { useState, useReducer } from 'react';\nimport ResetPassword from './ResetPassword';\nimport SignIn from './SignIn';\n// import SignUp from './SignUp';\nimport logo from '../../assets/logo-cosmo-market.svg'\nimport { actionTypes, websiteAddress } from '../../utils/utils';\n\n\nexport const useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(2),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    width: '100%',\n  },\n  loginLogo: {\n    margin: theme.spacing(3, 0),\n    width: '80%',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n  },\n  alert: {\n    margin: theme.spacing(0, 1, 2),\n  },\n}));\n\nconst titles = {\n  login: 'Conectează-te',\n  resetPassword: 'Recuperare parolă',\n  signUp: 'Creează cont',\n}\n\nfunction loginReducer(state, action) {\n  switch (action.type) {\n    case actionTypes.login:\n      return { login: true, resetPassword: false, signUp: false, title: titles.login }\n    case actionTypes.resetPassword:\n      return { login: false, resetPassword: true, signUp: false, title: titles.resetPassword }\n    case actionTypes.signUp:\n      return { login: false, resetPassword: false, signUp: true, title: titles.signUp }\n    default:\n      console.log(`Unhandled type: ${action.type}`)\n  }\n}\n\nfunction useLogin({ reducer = loginReducer } = {}) {\n  const [{ login, resetPassword, signUp, title }, dispatch] = useReducer(reducer, { login: true, resetPassword: false, signUp: false, title: titles.login })\n\n  const loginAction = () => dispatch({ type: actionTypes.login })\n  const resetPasswordAction = () => dispatch({ type: actionTypes.resetPassword })\n  const signUpAction = () => dispatch({ type: actionTypes.signUp })\n  const dispatchAction = (actionType) => dispatch({ type: actionType })\n\n  return { login, resetPassword, signUp, title, loginAction, resetPasswordAction, signUpAction, dispatchAction }\n}\n\n\nexport default function LoginLogic() {\n  const classes = useStyles();\n  const { login, resetPassword, signUp, title, loginAction, resetPasswordAction, signUpAction, dispatchAction } = useLogin()\n\n  const [alert, setAlert] = useState({\n    message: '',\n    severity: 'error'\n  })\n\n  function Copyright() {\n    return (\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n        {'Copyright © '}\n        <Link color=\"inherit\" href={websiteAddress}>\n          {websiteAddress}\n        </Link>\n        {' '}\n        {new Date().getFullYear()}\n        {'.'}\n      </Typography>\n    );\n  }\n\n  return (\n    <Container maxWidth=\"sm\">\n      <Grid container direction='column' justify='center' spacing={2}>\n        <Grid item className={classes.loginLogo}>\n          <img src={logo} alt='logo' />\n        </Grid>\n        <Grid item>\n          <Typography variant='h4' align='center' component='div'>\n            <Box fontWeight='fontWeightBold'>\n              {title}\n            </Box>\n          </Typography>\n        </Grid>\n        {\n          alert.message && <Grid item>\n            <Alert variant=\"filled\" severity={alert.severity} className={classes.alert}>\n              {alert.message}\n            </Alert>\n          </Grid>\n        }\n        {login && <Grid item><SignIn setAlert={setAlert} dispatchAction={dispatchAction} isCreateAccountDisabled={true} /></Grid>}\n        {resetPassword && <Grid item><ResetPassword setAlert={setAlert} dispatchAction={dispatchAction} /></Grid>}\n        {/* {signUp && <Grid item><SignUp setAlert={setAlert} dispatchAction={dispatchAction} /></Grid>} */}\n        <Grid item>\n          <Box mt={8}>\n            <Copyright />\n          </Box>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/LoginComponents/SignIn.js",["211"],"import { Button, Container, Grid, Link, makeStyles, TextField } from '@material-ui/core';\nimport React, { useState } from 'react'\nimport { useFirebase } from \"react-redux-firebase\";\nimport { actionTypes, timeout } from '../../utils/utils';\nimport GoogleButton from 'react-google-button'\nimport { useHistory } from \"react-router-dom\";\nimport { firebaseFunctions } from '../..';\n\n\nexport const useStyles = makeStyles((theme) => ({\n    form: {\n        width: '100%',\n        marginTop: theme.spacing(1),\n        // marginBottom: theme.spacing(),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 3),\n    },\n}));\n\n\nexport default function SignIn({ setAlert, dispatchAction, isCreateAccountDisabled = false }) {\n    const classes = useStyles();\n    const firebase = useFirebase();\n    const history = useHistory()\n\n    const [form, setForm] = useState({})\n    const [loading, setLoading] = useState(false)\n\n    const onChangeForField = fieldName => ({ target }) => setForm(state => ({ ...state, [fieldName]: target.value }));\n\n    async function handleSubmit(e) {\n        e.preventDefault()\n\n        try {\n            setLoading(true)\n            await firebase.login({\n                email: form.email.trim(),\n                password: form.password.trim()\n            })\n            let token = await firebase.auth().currentUser.getIdTokenResult()\n            if (token.claims && token.claims.admin) {\n                setAlert({ severity: 'success', message: 'Te-ai conectat cu succes.' })\n                timeout(500)\n                    .then(() => {\n                        history.push('/acasa')\n                    })\n            } else {\n                setAlert({ severity: 'error', message: 'Nu aveți drepturile necesare pentru a accesa această pagină' })\n                firebase.logout()\n            }\n        } catch (error) {\n            setAlert({ severity: 'error', message: error.message })\n        }\n        setLoading(false)\n    }\n\n    async function handleGoogleSignIn() {\n        firebase.login({\n            provider: 'google',\n            type: 'popup',\n        })\n            .then(resp => {\n                console.log(resp)\n                setAlert({ severity: 'success', message: 'Te-ai conectat cu succes.' })\n            })\n    }\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <form className={classes.form} onSubmit={handleSubmit}>\n                <Grid container direction='column' justify='space-between' alignItems='center'>\n                    <Grid item style={{ width: '100%' }}>\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"email\"\n                            label=\"Email\"\n                            name=\"email\"\n                            autoComplete=\"email\"\n                            autoFocus\n                            onChange={onChangeForField('email')}\n                        />\n                    </Grid>\n                    <Grid item style={{ width: '100%' }}>\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            name=\"password\"\n                            label=\"Parolă\"\n                            type=\"password\"\n                            id=\"password\"\n                            autoComplete=\"current-password\"\n                            onChange={onChangeForField('password')}\n                        />\n                    </Grid>\n                    <Grid item style={{ width: '100%' }}>\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.submit}\n                            disabled={loading}\n                        >\n                            Intră în cont\n                        </Button>\n                    </Grid>\n                    <Grid item>\n                        <GoogleButton\n                            onClick={handleGoogleSignIn}\n                            style={{ marginBottom: 16 }}\n                        />\n                    </Grid>\n                </Grid>\n            </form>\n            <Grid container justify='flex-end'>\n                <Grid item>\n                    <Link variant=\"body2\" color='error' href='#' onClick={() => { dispatchAction(actionTypes.resetPassword); setAlert({}) }}>\n                        Ai uitat parola?\n                        </Link>\n                </Grid>\n                {!isCreateAccountDisabled && <Grid item>\n                    <Link variant=\"body2\" color='primary' onClick={() => { dispatchAction(actionTypes.signUp); setAlert({}) }}>\n                        Nu ai cont? Fă-ți unul acum\n                        </Link>\n                </Grid>}\n            </Grid>\n\n        </Container>\n    )\n}\n","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/LoginComponents/ResetPassword.js",[],"/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/utils/utils.js",["212","213","214","215"],"/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/DashboardComponents/Dashboard.js",[],"/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/HeaderComponents/AdminDrawer.js",["216","217","218"],"/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/MarketComponents/Market.js",[],"/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/ProductsComponents/Products.js",[],"/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/CategoriesComponents/Categories.js",["219"],"/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/OrdersComponents/Orders.js",["220"],"import { Tab, Tabs } from '@material-ui/core'\nimport React, { useState } from 'react'\nimport { orderStateTypes } from '../../utils/utils'\nimport { OrderProvider, useOrderContext } from './OrderContext/OrderContext'\nimport OrdersTable from './OrdersTable/OrdersTable'\n\n\nexport default function OrdersWithStore() {\n    return (\n        <OrderProvider>\n            <Orders />\n        </OrderProvider>\n    )\n}\n\nfunction Orders() {\n    const orderContext = useOrderContext()\n\n    const changeTab = (e, newValue) => {\n        orderContext.changeOrderTab(newValue)\n    }\n\n    return (\n        <>\n            <Tabs value={orderContext.orderTab} onChange={changeTab} variant='fullWidth' indicatorColor='primary'>\n                {orderStateTypes.map((type) => {\n                    return <Tab value={type.state} label={type.name} key={type.state} />\n                })}\n            </Tabs>\n            <OrdersTable />\n        </>\n    )\n}\n","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/AuxiliaryComponents/PageContainer.js",[],"/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/AuxiliaryComponents/TitleGrid.js",[],"/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/UsersComponents/Users.js",[],"/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/OrdersComponents/OrdersTable/OrdersTable.js",["221","222","223","224","225","226"],"import { LinearProgress, Table, TableBody, TableContainer } from '@material-ui/core'\nimport React from 'react'\nimport { orderStateTypes } from '../../../utils/utils'\nimport OrdersTableHead from './OrdersTableHead'\nimport OrdersTableRow from './OrdersTableRow'\n\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\nimport { firestoreConnect, isEmpty, isLoaded, populate } from 'react-redux-firebase'\nimport DeliveredOrdersTableFooter from './DeliveredOrdersTableFooter'\nimport { useOrderContext } from '../OrderContext/OrderContext'\n\nconst populates = [\n    { child: 'userID', root: 'users', childAlias: 'user' },\n    { child: 'addressID', root: 'addresses', childAlias: 'address' },\n    { child: 'riderID', root: 'users', childAlias: 'rider' },\n]\n\n// export default compose(\n//     firestoreConnect((props) => [\n//         {\n//             collection: 'orders',\n//             where: [['state', '==', props.tab]],\n//             orderBy: [['createdAt', 'desc']]\n//         },\n//         { collection: 'users' },\n//         { collection: 'addresses' }\n//     ]),\n//     connect(({ firestore }, props) => ({\n//         orders: populate(firestore, 'orders', populates),\n//     }))\n// )(OrdersTable)\n\n// export default function OrdersTable({ tab }) {\nexport default function OrdersTable() {\n    const orderContext = useOrderContext()\n\n    return (\n        <>\n            <TableContainer>\n                <Table>\n                    <OrdersTableHead showRider={orderContext.orderTab === 'pending' ? false : true} />\n                    <TableBody>\n                        {!isEmpty(orderContext.orders) && Object.entries(orderContext.orders).map((order) => {\n                            return <OrdersTableRow order={order[1]} id={order[0]} key={order[0]} />\n                        })}\n                    </TableBody>\n                    {orderContext.orderTab === 'delivered' && !isEmpty(orderContext.orders) && <DeliveredOrdersTableFooter />}\n                </Table>\n            </TableContainer>\n            {!isLoaded(orderContext.orders) && <LinearProgress />}\n        </>\n    )\n}\n","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/OrdersComponents/OrdersTable/OrdersTableRow.js",["227","228","229"],"import { IconButton, TableCell, TableRow } from '@material-ui/core'\nimport React from 'react'\nimport { Link, Route, useHistory } from \"react-router-dom\";\n\nexport default function OrdersTableRow({ id, order }) {\n    const history = useHistory()\n\n    const orderClicked = () => {\n        history.push(`/comenzi/${id}/detalii`)\n    }\n\n    return (\n        <>\n            <TableRow\n                key={id}\n                hover\n                onClick={orderClicked}\n            >\n                <TableCell>\n                    {new Date(order.createdAt.seconds * 1000).toLocaleString('ro-RO')}\n                </TableCell>\n                <TableCell>\n                    {id}\n                </TableCell>\n                <TableCell>\n                    {order.user ? `${order.user.firstName}  ${order.user.lastName}` : order.userID}\n                </TableCell>\n                <TableCell>\n                    {order.address ? order.address.street : order.addressID}\n                </TableCell>\n                {order.state !== 'pending' && <TableCell>\n                    {order.rider ? `${order.rider.firstName}  ${order.rider.lastName}` : order.riderID}\n                </TableCell>}\n                <TableCell align='right'>\n                    {order.quantity}\n                </TableCell>\n                <TableCell align='right'>\n                    RON {order.totalPrice.toFixed(2)}\n                </TableCell>\n            </TableRow>\n        </>\n    )\n}\n","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/OrdersComponents/OrdersTable/OrdersTableHead.js",[],"/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/OrdersComponents/OrdersTable/DeliveredOrdersTableFooter.js",[],"/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/OrdersComponents/OrderDetails/OrderDetails.js",["230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247"],"import { Box, Button, ButtonGroup, Grid, LinearProgress, makeStyles, MenuItem, Select, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Typography } from '@material-ui/core'\nimport React, { useEffect, useState } from 'react'\nimport { useParams, withRouter } from 'react-router-dom'\nimport { useSnackbar } from 'notistack'\nimport OrderHeader from './OrderHeader'\nimport OrderNotes from './OrderNotes'\nimport OrderProducts from './OrderProducts'\nimport OrderCustomerDetails from './OrderCustomerDetails'\nimport OrderTotal from './OrderTotal'\nimport { firestoreConnect, isEmpty, populate } from 'react-redux-firebase'\nimport { connect } from 'react-redux'\nimport { compose } from 'redux'\nimport { firebaseFunctions } from '../../..'\nimport { useOrderContext } from '../OrderContext/OrderContext'\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        padding: theme.spacing(2)\n    },\n    errorButton: {\n        color: theme.palette.error.contrastText,\n        backgroundColor: theme.palette.error.main,\n        \"&:hover\": {\n            backgroundColor: theme.palette.error.dark,\n            \"@media (hover: none)\": {\n                backgroundColor: theme.palette.error.main\n            }\n        }\n    },\n}))\n\n// const populates = [\n//     { child: 'userID', root: 'users', childAlias: 'user' },\n//     { child: 'addressID', root: 'addresses', childAlias: 'address' },\n//     { child: 'riderID', root: 'users', childAlias: 'rider' },\n// ]\n\n// const order = 'order'\n\n// export const OrderDetailsWithRouter = withRouter(compose(\n//     firestoreConnect((props) => {\n//         return [\n//             {\n//                 collection: 'orders',\n//                 doc: props.match.params.orderID,\n//                 storeAs: 'order',\n//             },\n//             { collection: 'users' },\n//             { collection: 'addresses' }\n//         ]\n//     }),\n//     connect(({ firestore }, props) => ({\n//         order: populate(firestore, order, populates),\n//     }))\n// )(OrderDetails))\n\n\nexport default function OrderDetails(props) {\n    const classes = useStyles()\n    const { orderID } = useParams()\n    const orderContext = useOrderContext()\n\n    function OrderActions({ orderID, state }) {\n        const classes = useStyles()\n        const { enqueueSnackbar } = useSnackbar()\n        const functions = firebaseFunctions\n        const [isLoading, setIsLoading] = useState(false)\n        const acceptOrder = async () => {\n            setIsLoading(true)\n            functions.httpsCallable('riderFunctions-assignOrder')({ orderID: orderID })\n                .then(({ data }) => {\n                    setIsLoading(false)\n                    if (data.result) {\n                        enqueueSnackbar(data.result, { variant: 'success' })\n                    } else if (data.error) {\n                        enqueueSnackbar(data.error, { variant: 'error' })\n                    }\n                })\n        }\n\n        const completeOrder = async () => {\n            setIsLoading(true)\n            functions.httpsCallable('riderFunctions-completeOrder')({ orderID: orderID })\n                .then(({ data }) => {\n                    setIsLoading(false)\n                    if (data.result) {\n                        enqueueSnackbar(data.result, { variant: 'success' })\n                    } else if (data.error) {\n                        enqueueSnackbar(data.error, { variant: 'error' })\n                    }\n                })\n        }\n\n        const cancelDelivery = async () => {\n            setIsLoading(true)\n            functions.httpsCallable('riderFunctions-cancelDelivery')({ orderID: orderID })\n                .then(({ data }) => {\n                    setIsLoading(false)\n                    if (data.result) {\n                        enqueueSnackbar(data.result, { variant: 'success' })\n                    } else if (data.error) {\n                        enqueueSnackbar(data.error, { variant: 'error' })\n                    }\n                })\n        }\n\n        return (\n            <Grid container item justify='flex-end' className={classes.paper}>\n                {state === 'pending' && <Grid item>\n                    <Button onClick={acceptOrder} color='primary' variant='contained' disabled={isLoading}>\n                        Acceptă comanda\n                    </Button>\n                </Grid>}\n                {state === 'assigned' &&\n                    <Grid item>\n                        <ButtonGroup>\n                            <Button onClick={cancelDelivery} className={classes.errorButton} variant='contained' disabled={isLoading}>\n                                Anulează livrarea\n                            </Button>\n                            <Button onClick={completeOrder} color='primary' variant='contained' disabled={isLoading}>\n                                Finalizează comanda\n                            </Button>\n                        </ButtonGroup>\n                    </Grid>}\n                {/* {state === 'delivered' && <Grid item>\n                    <Button onClick={acceptOrder} color='primary' variant='contained'>\n                        Acceptă comanda\n                    </Button>\n                </Grid>} */}\n            </Grid>\n        )\n    }\n\n    return (\n        <>\n            <Grid container direction='column' spacing={4}>\n                {!isEmpty(orderContext.order) && <OrderHeader orderID={orderID} timestamp={orderContext.order.createdAt} state={orderContext.order.state} />}\n                {!isEmpty(orderContext.order) && <OrderCustomerDetails user={orderContext.order.user} userID={orderContext.order.userID} address={orderContext.order.address} addressID={orderContext.order.addressID} />}\n                {<OrderProducts orderID={orderID} />}\n                {!isEmpty(orderContext.order) && <OrderNotes notes={orderContext.order.notes} />}\n                {!isEmpty(orderContext.order) && <OrderTotal totalPrice={orderContext.order.totalPrice} />}\n                {/* <OrderActions orderID={orderID} state={order.state} /> */}\n                {isEmpty(orderContext.order) && <Grid item><LinearProgress /></Grid>}\n            </Grid>\n        </>\n    )\n}\n\n\n","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/OrdersComponents/OrderDetails/OrderNotes.js",["248"],"import { Box, Button, Grid, TextField, Typography } from \"@material-ui/core\";\nimport { useState } from \"react\";\nimport { isLoaded, useFirestore } from \"react-redux-firebase\";\nimport { useParams } from \"react-router-dom\";\n\nexport default function OrderNotes({ notes }) {\n    const [notesData, setNotesData] = useState(notes)\n    const [isLoading, setIsLoading] = useState(false)\n    const { orderID } = useParams()\n    const firestore = useFirestore()\n\n    const updateUserData = async (e) => {\n        setIsLoading(true)\n        await firestore.collection('orders').doc(orderID).update({ notes: notesData })\n        setIsLoading(false)\n    }\n    return (\n        <>\n            <Grid container item direction='column' spacing={2}>\n                <Grid item >\n                    <Typography component='div'>\n                        <Box fontWeight='fontWeightBold'>\n                            Note\n                        </Box>\n                    </Typography>\n                </Grid>\n                <Grid item >\n                    <TextField\n                        multiline\n                        rows={4}\n                        value={notesData}\n                        onChange={(e) => setNotesData(e.target.value)}\n                        disabled={isLoading}\n                        variant='outlined'\n                    />\n                </Grid>\n                <Grid item >\n                    <Button\n                        variant='contained'\n                        color='primary'\n                        onClick={updateUserData}\n                        disabled={isLoading}\n                    >\n                        Actualizează\n                    </Button>\n                </Grid>\n            </Grid>\n        </>\n    )\n}","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/OrdersComponents/OrderDetails/OrderCustomerDetails.js",[],"/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/OrdersComponents/OrderDetails/OrderTotal.js",[],"/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/OrdersComponents/OrderDetails/OrderHeader.js",[],"/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/OrdersComponents/OrderDetails/OrderProducts.js",["249","250","251","252","253","254","255","256"],"\nimport { Box, Button, CircularProgress, Grid, InputAdornment, LinearProgress, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TextField, Typography } from '@material-ui/core'\nimport React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { firestoreConnect, isEmpty, isLoaded, populate, useFirebase, useFirestore } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport { useOrderContext } from '../OrderContext/OrderContext'\nimport OrderProductsTableRow from './OrderProductsTableRow'\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { useParams } from 'react-router-dom'\n\n\n// const productsInOrder = 'productsInOrder'\n\n// export default compose(\n//     firestoreConnect((props) => [\n//         { collection: 'orders' },\n//         {\n//             collection: 'orders',\n//             doc: props.orderID,\n//             subcollections: [{ collection: 'products' }],\n//             storeAs: productsInOrder\n//         },\n//     ]),\n//     connect(({ firestore }, props) => ({\n//         productsInOrder: firestore.data.productsInOrder,\n//     }))\n// )(OrderProducts)\n\n\nexport default function OrderProducts() {\n    const orderContext = useOrderContext()\n    const firestore = useFirestore()\n    const firebase = useFirebase()\n    const { orderID } = useParams()\n\n    const addProductToOrder = (e, newVal) => {\n        if (newVal)\n            firestore.collection('orders').doc(orderID).collection('products').doc(newVal[0]).set({\n                quantity: firebase.firestore.FieldValue.increment(1),\n                price: firebase.firestore.FieldValue.increment(newVal[1].price)\n            }, { merge: true })\n    }\n\n    console.log(orderContext.productsInOrder)\n    return (\n        <>\n            <Grid container item direction='column' spacing={1}>\n                <Grid item >\n                    <Typography component='div'>\n                        <Box fontWeight='fontWeightBold'>\n                            Produse\n                        </Box>\n                    </Typography>\n                </Grid>\n                <Grid item>\n                    <TableContainer>\n                        <Table>\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell colSpan={2}>\n                                        Produs\n                                    </TableCell>\n                                    <TableCell align='right'>\n                                        Preț bucată\n                                    </TableCell>\n                                    <TableCell align='right'>\n                                        Cantitate\n                                    </TableCell>\n                                    <TableCell align='right'>\n                                        Preț total\n                                    </TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {!isEmpty(orderContext.productsInOrder) && Object.entries(orderContext.productsInOrder).map((product, index) => {\n                                    return !isEmpty(product[1]) && <OrderProductsTableRow productInOrder={product} key={product[0]} />\n                                })}\n                            </TableBody>\n                        </Table>\n                    </TableContainer>\n                </Grid>\n                <Grid item>\n                    {!isLoaded(orderContext.productsInOrder) && <LinearProgress />}\n                </Grid>\n                <Grid item>\n                    <Autocomplete\n                        onChange={addProductToOrder}\n                        options={!isEmpty(orderContext.products) ? Object.entries(orderContext.products) : []}\n                        getOptionLabel={(product) => product[1].name}\n                        getOptionSelected={(option, value) => option.name === value.name}\n                        style={{ width: 300 }}\n                        renderInput={(params) => < TextField {...params}\n                            label=\"Adaugă produs\"\n                            variant=\"outlined\"\n                        />}\n                    />\n                </Grid>\n            </Grid>\n        </>\n    )\n}","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/OrdersComponents/OrderDetails/OrderUserDetails.js",[],"/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/OrdersComponents/OrderDetails/OrderAddressDetails.js",[],"/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/OrdersComponents/OrderDetails/OrderProductsTableRow.js",["257","258","259","260"],"import { Button, Checkbox, Grid, IconButton, makeStyles, TableCell, TableRow, Typography } from '@material-ui/core'\nimport React, { useState } from 'react'\nimport { connect, useSelector } from 'react-redux'\nimport { isEmpty, useFirebase, useFirestore, useFirestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport { useParams } from 'react-router-dom'\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\n\nconst useStyles = makeStyles((theme) => ({\n    deleteButton: {\n        color: theme.palette.error.main\n    },\n}))\n\nexport default function OrderProductsTableRow({ productInOrder }) {\n    const classes = useStyles()\n    const [isLoading, setIsLoading] = useState(false)\n    const { orderID } = useParams()\n    const firestore = useFirestore()\n    useFirestoreConnect(() => [\n        { collection: 'products', doc: productInOrder[0] } // or `todos/${props.todoId}`\n    ])\n\n    const product = useSelector(\n        ({ firestore: { data } }) => data.products && data.products[productInOrder[0]]\n    )\n\n    const removeProductFromOrder = async () => {\n        setIsLoading(true)\n        await firestore.collection('orders').doc(orderID).collection('products').doc(productInOrder[0]).delete()\n    }\n\n    function QuantitySelector() {\n        const { orderID } = useParams()\n        const firestore = useFirestore()\n        const firebase = useFirebase()\n        const [isLoading, setIsLoading] = useState(false)\n\n        const decrementQuantity = async () => {\n            const price = productInOrder[1].price / productInOrder[1].quantity\n            setIsLoading(true)\n            if (productInOrder[1].quantity > 1)\n                await firestore.collection('orders').doc(orderID).collection('products').doc(productInOrder[0]).update({ quantity: firebase.firestore.FieldValue.increment(-1), price: firebase.firestore.FieldValue.increment(-price) })\n            setIsLoading(false)\n        }\n\n        const incrementQuantity = async () => {\n            const price = productInOrder[1].price / productInOrder[1].quantity\n            setIsLoading(true)\n            if (productInOrder[1].quantity < 20)\n                await firestore.collection('orders').doc(orderID).collection('products').doc(productInOrder[0]).update({ quantity: firebase.firestore.FieldValue.increment(1), price: firebase.firestore.FieldValue.increment(price) })\n            setIsLoading(false)\n        }\n\n        return (\n            <>\n                <Grid container justify='flex-end'>\n                    <Grid item>\n                        <IconButton\n                            size='small'\n                            onClick={decrementQuantity}\n                            disabled={isLoading}\n                        >\n                            <RemoveIcon fontSize='small' />\n                        </IconButton>\n                    </Grid>\n                    <Grid item>\n                        <Typography>\n                            {!isEmpty(productInOrder[1]) && productInOrder[1].quantity}\n                        </Typography>\n                    </Grid>\n                    <Grid item>\n                        <IconButton\n                            size='small'\n                            onClick={incrementQuantity}\n                            disabled={isLoading}\n                        >\n                            <AddIcon fontSize='small' />\n                        </IconButton>\n                    </Grid>\n                </Grid>\n            </>\n        )\n    }\n\n    return (\n        <TableRow key={productInOrder[0]} hover>\n            <TableCell>\n                <IconButton\n                    className={classes.deleteButton}\n                    size='small'\n                    onClick={removeProductFromOrder}\n                    disabled={isLoading}\n                >\n                    <DeleteForeverIcon />\n                </IconButton>\n            </TableCell>\n            <TableCell>\n                {isEmpty(product) ? productInOrder[0] : product.name}\n            </TableCell>\n            <TableCell align='right'>\n                RON {isEmpty(product) ? productInOrder[1].price.toFixed(2) : product.price.toFixed(2)}\n            </TableCell>\n            <TableCell align='right'>\n                <QuantitySelector />\n            </TableCell>\n            <TableCell align='right'>\n                RON {!isEmpty(productInOrder[1]) && productInOrder[1].price.toFixed(2)}\n            </TableCell>\n        </TableRow>\n    )\n}\n","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/OrdersComponents/OrderContext/OrderContext.js",["261","262"],"import React, { useContext, useEffect, useState } from 'react'\nimport { isEmpty, isLoaded, populate, useFirestoreConnect } from 'react-redux-firebase';\nimport { orderStateTypes } from '../../../utils/utils';\nimport { useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\n\n\nconst populates = [\n    { child: 'userID', root: 'users', childAlias: 'user' },\n    { child: 'addressID', root: 'addresses', childAlias: 'address' },\n    { child: 'riderID', root: 'users', childAlias: 'rider' },\n]\n\nconst OrderContext = React.createContext(null)\n\nexport function useOrderContext() {\n    return useContext(OrderContext)\n}\n\nexport function OrderProvider({ children }) {\n    const [orderTab, setOrderTab] = useState(orderStateTypes[0].state)\n    const [filterOption, setFilterOption] = useState({ option: 'createdAt', direction: 'desc' })\n    const { orderID } = useParams()\n\n    const ordersByTab = `orders-${orderTab}`\n    useFirestoreConnect(() => {\n        // console.log(props)\n        // console.log(orderTab)\n        return [\n            {\n                collection: 'orders',\n                where: [['state', '==', orderTab]],\n                orderBy: [[filterOption.option, filterOption.direction]],\n                storeAs: ordersByTab,\n            },\n            { collection: 'users' },\n            { collection: 'addresses' }\n        ]\n    })\n\n    const orders = useSelector(\n        ({ firestore }) => populate(firestore, ordersByTab, populates),\n    )\n\n    const changeOrderTab = (orderState) => {\n        setOrderTab(orderState)\n    }\n\n    const changeFilterOption = (filterOption) => {\n        setFilterOption(filterOption)\n    }\n\n    const revenueByOrderState = !isEmpty(orders) && Object.entries(orders).reduce((acc, curr) => acc + curr[1].totalPrice, 0).toFixed(2)\n\n    const storeAsOrder = `order-${orderID}`\n    useFirestoreConnect(() => {\n        return [\n            {\n                collection: 'orders',\n                doc: orderID,\n                storeAs: storeAsOrder\n            },\n            { collection: 'users' },\n            { collection: 'addresses' }\n        ]\n    })\n\n    const order = useSelector(\n        ({ firestore }) => populate(firestore, storeAsOrder, populates),\n    )\n\n    const storeAsProductsInOrder = `productsInOrder-${orderID}`\n    useFirestoreConnect(() => {\n        if (orderID)\n            return [\n                { collection: 'orders' },\n                {\n                    collection: 'orders',\n                    doc: orderID,\n                    subcollections: [{ collection: 'products' }],\n                    storeAs: storeAsProductsInOrder,\n                },\n            ]\n    })\n\n    const productsInOrder = useSelector(\n        ({ firestore }) => firestore.data[storeAsProductsInOrder]\n    )\n\n    const productsStoreAs = 'productsWithStockOrderedAlphabetically'\n    useFirestoreConnect([{\n        collection: 'products',\n        where: [['stock', '==', true]],\n        orderBy: [['name', 'asc']],\n        storeAs: productsStoreAs\n    },])\n\n    const products = useSelector(\n        ({ firestore }) => firestore.data[productsStoreAs]\n    )\n\n    const value = {\n        //vars\n        orders,\n        orderTab,\n        filterOption,\n        revenueByOrderState,\n        order,\n        orderID,\n        productsInOrder,\n        products,\n        //functions\n        changeOrderTab,\n        changeFilterOption,\n    }\n\n    return (\n        <>\n            <OrderContext.Provider value={value}>\n                {children}\n            </OrderContext.Provider>\n        </>\n    )\n}\n","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/CategoriesComponents/CategoriesTree.js",["263"],"/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/CategoriesComponents/CategoryContext/CategoryContext.js",["264","265","266","267","268","269","270","271"],"import React, { useContext, useEffect, useState } from 'react'\nimport { isEmpty, isLoaded, populate, useFirestoreConnect } from 'react-redux-firebase';\nimport { orderStateTypes } from '../../../utils/utils';\nimport { useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\n\n\nconst populates = [\n    { child: 'userID', root: 'users', childAlias: 'user' },\n    { child: 'addressID', root: 'addresses', childAlias: 'address' },\n    { child: 'riderID', root: 'users', childAlias: 'rider' },\n]\n\nconst CategoryContext = React.createContext(null)\n\nexport function useCategoryContext() {\n    return useContext(CategoryContext)\n}\n\nexport function CategoryProvider({ children }) {\n    // const [orderTab, setOrderTab] = useState(orderStateTypes[0].state)\n    // const [filterOption, setFilterOption] = useState({ option: 'createdAt', direction: 'desc' })\n    const { categoryID } = useParams()\n\n    const mainCategoriesStoreAs = `categories-main`\n    useFirestoreConnect(() => {\n        // console.log(props)\n        // console.log(orderTab)\n        return [\n            {\n                collection: 'categories',\n                where: [['mainCategory', '==', true]],\n                orderBy: [['name', 'asc']],\n                storeAs: mainCategoriesStoreAs,\n            },\n        ]\n    })\n\n    const mainCategories = useSelector(\n        ({ firestore }) => firestore.data[mainCategoriesStoreAs]\n    )\n\n    useFirestoreConnect(() => {\n        // console.log(props)\n        // console.log(orderTab)\n        return [\n            {\n                collection: 'categories',\n                orderBy: [['name', 'asc']],\n            },\n        ]\n    })\n\n    const categories = useSelector(\n        ({ firestore }) => firestore.data.categories\n    )\n\n\n\n    const value = {\n        //vars\n        mainCategories,\n        categories,\n        //functions\n    }\n\n    return (\n        <>\n            <CategoryContext.Provider value={value}>\n                {children}\n            </CategoryContext.Provider>\n        </>\n    )\n}\n","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/UsersComponents/UserContext/UserContext.js",["272","273","274","275","276","277","278","279","280"],"/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/CategoriesComponents/CategoryDetails.js",[],"/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/CategoriesComponents/CategoryCreator.js",[],"/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/ProductsComponents/ProductsList.js",["281","282","283"],"/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/ProductsComponents/CategoriesTree.js",["284","285"],"/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/ProductsComponents/ProductDetails.js",["286"],"/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/ProductsComponents/ProductContext/ProductContext.js",["287","288","289","290","291","292","293"],"/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/ProductsComponents/ProductCreator.js",[],"/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/ProductsComponents/ProductBox.js",["294","295","296"],"/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/ProductsComponents/AddProductBox.js",["297"],"/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/ProductsComponents/ProductsPageHeader.js",["298"],"/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-admin/src/components/ProductsComponents/ProductMarketBox.js",["299","300","301","302"],{"ruleId":"303","severity":1,"message":"304","line":73,"column":7,"nodeType":"305","messageId":"306","endLine":73,"endColumn":13},{"ruleId":"307","replacedBy":"308"},{"ruleId":"309","replacedBy":"310"},{"ruleId":"303","severity":1,"message":"311","line":3,"column":35,"nodeType":"305","messageId":"306","endLine":3,"endColumn":45},{"ruleId":"303","severity":1,"message":"312","line":8,"column":8,"nodeType":"305","messageId":"306","endLine":8,"endColumn":21},{"ruleId":"303","severity":1,"message":"313","line":9,"column":8,"nodeType":"305","messageId":"306","endLine":9,"endColumn":20},{"ruleId":"303","severity":1,"message":"314","line":9,"column":24,"nodeType":"305","messageId":"306","endLine":9,"endColumn":46},{"ruleId":"303","severity":1,"message":"315","line":10,"column":10,"nodeType":"305","messageId":"306","endLine":10,"endColumn":23},{"ruleId":"303","severity":1,"message":"316","line":6,"column":18,"nodeType":"305","messageId":"306","endLine":6,"endColumn":28},{"ruleId":"303","severity":1,"message":"317","line":6,"column":30,"nodeType":"305","messageId":"306","endLine":6,"endColumn":34},{"ruleId":"303","severity":1,"message":"318","line":6,"column":54,"nodeType":"305","messageId":"306","endLine":6,"endColumn":64},{"ruleId":"303","severity":1,"message":"319","line":49,"column":11,"nodeType":"305","messageId":"306","endLine":49,"endColumn":18},{"ruleId":"303","severity":1,"message":"320","line":51,"column":11,"nodeType":"305","messageId":"306","endLine":51,"endColumn":18},{"ruleId":"303","severity":1,"message":"321","line":63,"column":33,"nodeType":"305","messageId":"306","endLine":63,"endColumn":39},{"ruleId":"303","severity":1,"message":"322","line":63,"column":48,"nodeType":"305","messageId":"306","endLine":63,"endColumn":59},{"ruleId":"303","severity":1,"message":"323","line":63,"column":61,"nodeType":"305","messageId":"306","endLine":63,"endColumn":80},{"ruleId":"303","severity":1,"message":"324","line":63,"column":82,"nodeType":"305","messageId":"306","endLine":63,"endColumn":94},{"ruleId":"303","severity":1,"message":"325","line":7,"column":10,"nodeType":"305","messageId":"306","endLine":7,"endColumn":27},{"ruleId":"303","severity":1,"message":"326","line":7,"column":8,"nodeType":"305","messageId":"306","endLine":7,"endColumn":14},{"ruleId":"303","severity":1,"message":"327","line":10,"column":8,"nodeType":"305","messageId":"306","endLine":10,"endColumn":23},{"ruleId":"303","severity":1,"message":"328","line":13,"column":8,"nodeType":"305","messageId":"306","endLine":13,"endColumn":22},{"ruleId":"303","severity":1,"message":"329","line":16,"column":8,"nodeType":"305","messageId":"306","endLine":16,"endColumn":20},{"ruleId":"303","severity":1,"message":"330","line":1,"column":10,"nodeType":"305","messageId":"306","endLine":1,"endColumn":13},{"ruleId":"303","severity":1,"message":"331","line":2,"column":17,"nodeType":"305","messageId":"306","endLine":2,"endColumn":25},{"ruleId":"303","severity":1,"message":"332","line":3,"column":10,"nodeType":"305","messageId":"306","endLine":3,"endColumn":14},{"ruleId":"303","severity":1,"message":"333","line":3,"column":8,"nodeType":"305","messageId":"306","endLine":3,"endColumn":23},{"ruleId":"303","severity":1,"message":"331","line":2,"column":17,"nodeType":"305","messageId":"306","endLine":2,"endColumn":25},{"ruleId":"303","severity":1,"message":"334","line":3,"column":10,"nodeType":"305","messageId":"306","endLine":3,"endColumn":25},{"ruleId":"303","severity":1,"message":"335","line":7,"column":10,"nodeType":"305","messageId":"306","endLine":7,"endColumn":17},{"ruleId":"303","severity":1,"message":"336","line":8,"column":10,"nodeType":"305","messageId":"306","endLine":8,"endColumn":17},{"ruleId":"303","severity":1,"message":"337","line":9,"column":10,"nodeType":"305","messageId":"306","endLine":9,"endColumn":26},{"ruleId":"303","severity":1,"message":"338","line":9,"column":47,"nodeType":"305","messageId":"306","endLine":9,"endColumn":55},{"ruleId":"303","severity":1,"message":"339","line":13,"column":7,"nodeType":"305","messageId":"306","endLine":13,"endColumn":16},{"ruleId":"303","severity":1,"message":"340","line":1,"column":10,"nodeType":"305","messageId":"306","endLine":1,"endColumn":20},{"ruleId":"303","severity":1,"message":"332","line":3,"column":10,"nodeType":"305","messageId":"306","endLine":3,"endColumn":14},{"ruleId":"303","severity":1,"message":"341","line":3,"column":16,"nodeType":"305","messageId":"306","endLine":3,"endColumn":21},{"ruleId":"303","severity":1,"message":"330","line":1,"column":10,"nodeType":"305","messageId":"306","endLine":1,"endColumn":13},{"ruleId":"303","severity":1,"message":"342","line":1,"column":70,"nodeType":"305","messageId":"306","endLine":1,"endColumn":78},{"ruleId":"303","severity":1,"message":"343","line":1,"column":80,"nodeType":"305","messageId":"306","endLine":1,"endColumn":86},{"ruleId":"303","severity":1,"message":"344","line":1,"column":88,"nodeType":"305","messageId":"306","endLine":1,"endColumn":93},{"ruleId":"303","severity":1,"message":"345","line":1,"column":95,"nodeType":"305","messageId":"306","endLine":1,"endColumn":104},{"ruleId":"303","severity":1,"message":"346","line":1,"column":106,"nodeType":"305","messageId":"306","endLine":1,"endColumn":115},{"ruleId":"303","severity":1,"message":"347","line":1,"column":117,"nodeType":"305","messageId":"306","endLine":1,"endColumn":131},{"ruleId":"303","severity":1,"message":"348","line":1,"column":133,"nodeType":"305","messageId":"306","endLine":1,"endColumn":142},{"ruleId":"303","severity":1,"message":"349","line":1,"column":144,"nodeType":"305","messageId":"306","endLine":1,"endColumn":152},{"ruleId":"303","severity":1,"message":"318","line":1,"column":154,"nodeType":"305","messageId":"306","endLine":1,"endColumn":164},{"ruleId":"303","severity":1,"message":"350","line":2,"column":17,"nodeType":"305","messageId":"306","endLine":2,"endColumn":26},{"ruleId":"303","severity":1,"message":"311","line":3,"column":21,"nodeType":"305","messageId":"306","endLine":3,"endColumn":31},{"ruleId":"303","severity":1,"message":"337","line":10,"column":10,"nodeType":"305","messageId":"306","endLine":10,"endColumn":26},{"ruleId":"303","severity":1,"message":"338","line":10,"column":37,"nodeType":"305","messageId":"306","endLine":10,"endColumn":45},{"ruleId":"303","severity":1,"message":"336","line":11,"column":10,"nodeType":"305","messageId":"306","endLine":11,"endColumn":17},{"ruleId":"303","severity":1,"message":"335","line":12,"column":10,"nodeType":"305","messageId":"306","endLine":12,"endColumn":17},{"ruleId":"303","severity":1,"message":"351","line":59,"column":11,"nodeType":"305","messageId":"306","endLine":59,"endColumn":18},{"ruleId":"303","severity":1,"message":"352","line":63,"column":14,"nodeType":"305","messageId":"306","endLine":63,"endColumn":26},{"ruleId":"303","severity":1,"message":"353","line":3,"column":10,"nodeType":"305","messageId":"306","endLine":3,"endColumn":18},{"ruleId":"303","severity":1,"message":"354","line":2,"column":15,"nodeType":"305","messageId":"306","endLine":2,"endColumn":21},{"ruleId":"303","severity":1,"message":"355","line":2,"column":23,"nodeType":"305","messageId":"306","endLine":2,"endColumn":39},{"ruleId":"303","severity":1,"message":"356","line":2,"column":47,"nodeType":"305","messageId":"306","endLine":2,"endColumn":61},{"ruleId":"303","severity":1,"message":"350","line":3,"column":17,"nodeType":"305","messageId":"306","endLine":3,"endColumn":26},{"ruleId":"303","severity":1,"message":"336","line":4,"column":10,"nodeType":"305","messageId":"306","endLine":4,"endColumn":17},{"ruleId":"303","severity":1,"message":"337","line":5,"column":10,"nodeType":"305","messageId":"306","endLine":5,"endColumn":26},{"ruleId":"303","severity":1,"message":"338","line":5,"column":47,"nodeType":"305","messageId":"306","endLine":5,"endColumn":55},{"ruleId":"303","severity":1,"message":"335","line":6,"column":10,"nodeType":"305","messageId":"306","endLine":6,"endColumn":17},{"ruleId":"303","severity":1,"message":"354","line":1,"column":10,"nodeType":"305","messageId":"306","endLine":1,"endColumn":16},{"ruleId":"303","severity":1,"message":"357","line":1,"column":18,"nodeType":"305","messageId":"306","endLine":1,"endColumn":26},{"ruleId":"303","severity":1,"message":"336","line":3,"column":10,"nodeType":"305","messageId":"306","endLine":3,"endColumn":17},{"ruleId":"303","severity":1,"message":"335","line":5,"column":10,"nodeType":"305","messageId":"306","endLine":5,"endColumn":17},{"ruleId":"303","severity":1,"message":"350","line":1,"column":29,"nodeType":"305","messageId":"306","endLine":1,"endColumn":38},{"ruleId":"303","severity":1,"message":"353","line":2,"column":19,"nodeType":"305","messageId":"306","endLine":2,"endColumn":27},{"ruleId":"303","severity":1,"message":"358","line":9,"column":22,"nodeType":"305","messageId":"306","endLine":9,"endColumn":33},{"ruleId":"303","severity":1,"message":"350","line":1,"column":29,"nodeType":"305","messageId":"306","endLine":1,"endColumn":38},{"ruleId":"303","severity":1,"message":"331","line":1,"column":40,"nodeType":"305","messageId":"306","endLine":1,"endColumn":48},{"ruleId":"303","severity":1,"message":"359","line":2,"column":10,"nodeType":"305","messageId":"306","endLine":2,"endColumn":17},{"ruleId":"303","severity":1,"message":"353","line":2,"column":19,"nodeType":"305","messageId":"306","endLine":2,"endColumn":27},{"ruleId":"303","severity":1,"message":"338","line":2,"column":29,"nodeType":"305","messageId":"306","endLine":2,"endColumn":37},{"ruleId":"303","severity":1,"message":"334","line":3,"column":10,"nodeType":"305","messageId":"306","endLine":3,"endColumn":25},{"ruleId":"303","severity":1,"message":"339","line":8,"column":7,"nodeType":"305","messageId":"306","endLine":8,"endColumn":16},{"ruleId":"303","severity":1,"message":"360","line":23,"column":13,"nodeType":"305","messageId":"306","endLine":23,"endColumn":23},{"ruleId":"303","severity":1,"message":"350","line":1,"column":29,"nodeType":"305","messageId":"306","endLine":1,"endColumn":38},{"ruleId":"303","severity":1,"message":"331","line":1,"column":40,"nodeType":"305","messageId":"306","endLine":1,"endColumn":48},{"ruleId":"303","severity":1,"message":"359","line":2,"column":10,"nodeType":"305","messageId":"306","endLine":2,"endColumn":17},{"ruleId":"303","severity":1,"message":"353","line":2,"column":19,"nodeType":"305","messageId":"306","endLine":2,"endColumn":27},{"ruleId":"303","severity":1,"message":"338","line":2,"column":29,"nodeType":"305","messageId":"306","endLine":2,"endColumn":37},{"ruleId":"303","severity":1,"message":"334","line":3,"column":10,"nodeType":"305","messageId":"306","endLine":3,"endColumn":25},{"ruleId":"303","severity":1,"message":"339","line":8,"column":7,"nodeType":"305","messageId":"306","endLine":8,"endColumn":16},{"ruleId":"303","severity":1,"message":"361","line":22,"column":13,"nodeType":"305","messageId":"306","endLine":22,"endColumn":19},{"ruleId":"303","severity":1,"message":"362","line":34,"column":11,"nodeType":"305","messageId":"306","endLine":34,"endColumn":19},{"ruleId":"303","severity":1,"message":"363","line":2,"column":17,"nodeType":"305","messageId":"306","endLine":2,"endColumn":28},{"ruleId":"303","severity":1,"message":"364","line":4,"column":10,"nodeType":"305","messageId":"306","endLine":4,"endColumn":19},{"ruleId":"303","severity":1,"message":"365","line":5,"column":10,"nodeType":"305","messageId":"306","endLine":5,"endColumn":13},{"ruleId":"303","severity":1,"message":"366","line":6,"column":8,"nodeType":"305","messageId":"306","endLine":6,"endColumn":18},{"ruleId":"303","severity":1,"message":"358","line":8,"column":22,"nodeType":"305","messageId":"306","endLine":8,"endColumn":33},{"ruleId":"303","severity":1,"message":"367","line":18,"column":23,"nodeType":"305","messageId":"306","endLine":18,"endColumn":35},{"ruleId":"303","severity":1,"message":"363","line":1,"column":17,"nodeType":"305","messageId":"306","endLine":1,"endColumn":28},{"ruleId":"303","severity":1,"message":"350","line":1,"column":42,"nodeType":"305","messageId":"306","endLine":1,"endColumn":51},{"ruleId":"303","severity":1,"message":"359","line":2,"column":10,"nodeType":"305","messageId":"306","endLine":2,"endColumn":17},{"ruleId":"303","severity":1,"message":"353","line":2,"column":19,"nodeType":"305","messageId":"306","endLine":2,"endColumn":27},{"ruleId":"303","severity":1,"message":"338","line":2,"column":29,"nodeType":"305","messageId":"306","endLine":2,"endColumn":37},{"ruleId":"303","severity":1,"message":"334","line":3,"column":15,"nodeType":"305","messageId":"306","endLine":3,"endColumn":30},{"ruleId":"303","severity":1,"message":"368","line":14,"column":25,"nodeType":"305","messageId":"306","endLine":14,"endColumn":34},{"ruleId":"303","severity":1,"message":"354","line":1,"column":10,"nodeType":"305","messageId":"306","endLine":1,"endColumn":16},{"ruleId":"303","severity":1,"message":"369","line":2,"column":23,"nodeType":"305","messageId":"306","endLine":2,"endColumn":30},{"ruleId":"303","severity":1,"message":"360","line":28,"column":13,"nodeType":"305","messageId":"306","endLine":28,"endColumn":23},{"ruleId":"303","severity":1,"message":"370","line":1,"column":45,"nodeType":"305","messageId":"306","endLine":1,"endColumn":54},{"ruleId":"303","severity":1,"message":"371","line":1,"column":113,"nodeType":"305","messageId":"306","endLine":1,"endColumn":123},{"ruleId":"303","severity":1,"message":"332","line":2,"column":10,"nodeType":"305","messageId":"306","endLine":2,"endColumn":14},{"ruleId":"303","severity":1,"message":"364","line":2,"column":16,"nodeType":"305","messageId":"306","endLine":2,"endColumn":25},{"ruleId":"303","severity":1,"message":"325","line":3,"column":10,"nodeType":"305","messageId":"306","endLine":3,"endColumn":27},{"ruleId":"303","severity":1,"message":"372","line":4,"column":10,"nodeType":"305","messageId":"306","endLine":4,"endColumn":27},"no-unused-vars","'styles' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["373"],"no-negated-in-lhs",["374"],"'withRouter' is defined but never used.","'PageContainer' is defined but never used.","'OrderDetails' is defined but never used.","'OrderDetailsWithRouter' is defined but never used.","'OrderProvider' is defined but never used.","'capitalize' is defined but never used.","'Grid' is defined but never used.","'Typography' is defined but never used.","'profile' is assigned a value but never used.","'history' is assigned a value but never used.","'signUp' is assigned a value but never used.","'loginAction' is assigned a value but never used.","'resetPasswordAction' is assigned a value but never used.","'signUpAction' is assigned a value but never used.","'firebaseFunctions' is defined but never used.","'Market' is defined but never used.","'OrdersWithStore' is defined but never used.","'ProductCreator' is defined but never used.","'ProductsList' is defined but never used.","'Box' is defined but never used.","'useState' is defined but never used.","'Link' is defined but never used.","'CategoryDetails' is defined but never used.","'orderStateTypes' is defined but never used.","'compose' is defined but never used.","'connect' is defined but never used.","'firestoreConnect' is defined but never used.","'populate' is defined but never used.","'populates' is assigned a value but never used.","'IconButton' is defined but never used.","'Route' is defined but never used.","'MenuItem' is defined but never used.","'Select' is defined but never used.","'Table' is defined but never used.","'TableBody' is defined but never used.","'TableCell' is defined but never used.","'TableContainer' is defined but never used.","'TableHead' is defined but never used.","'TableRow' is defined but never used.","'useEffect' is defined but never used.","'classes' is assigned a value but never used.","'OrderActions' is defined but never used.","'isLoaded' is defined but never used.","'Button' is defined but never used.","'CircularProgress' is defined but never used.","'InputAdornment' is defined but never used.","'Checkbox' is defined but never used.","'useLocation' is defined but never used.","'isEmpty' is defined but never used.","'categoryID' is assigned a value but never used.","'userID' is assigned a value but never used.","'products' is assigned a value but never used.","'useCallback' is defined but never used.","'useParams' is defined but never used.","'all' is defined but never used.","'AddBoxIcon' is defined but never used.","'setIsLoading' is assigned a value but never used.","'productID' is assigned a value but never used.","'useMemo' is defined but never used.","'CardMedia' is defined but never used.","'withStyles' is defined but never used.","'useProductContext' is defined but never used.","no-global-assign","no-unsafe-negation"]